{"version":3,"file":"default-src_app_pages_home_home_module_ts.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEhB;;;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;KACpB;CACF,CAAC;AAMK,MAAM,qBAAqB;;0FAArB,qBAAqB;kHAArB,qBAAqB;sHAHtB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,qBAAqB,oFAFtB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACbuB;AACF;AAEA;AAEiB;AAEvB;;AAWhC,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GAPvB,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,uEAAqB;mIAIZ,cAAc,mBAFV,gDAAQ,aALrB,yDAAY;QACZ,uDAAW;QACX,uDAAW;QACX,uEAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAIA;;;;;;;;;;;;;;;;;ICqBME,wDAAAA;;;;;;IACAA,wDAAAA;;;;;;;;IAYAA,6DAAAA;IAAgGA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAASA,0DAAAA,sBAAT;IAAsB,CAAtB;IAAwBA,2DAAAA;;;;;;IACxHA,wDAAAA;;;;;;IACAA,wDAAAA;;;;;IAA4CA,qEAAAA,6FAAAA,4DAAAA;;;;;;IAE9CA,6DAAAA;IAA4BA,qDAAAA;IAAsBA,2DAAAA;;;;;;IAClDA,6DAAAA;IAA4BA,qDAAAA;;IAA2BA,2DAAAA;;;;;IAA3BA,wDAAAA;IAAAA,gEAAAA,CAAAA,0DAAAA;;;;;;IAqBxBA,wDAAAA;;;;;;IACAA,wDAAAA;;;;;IAA+BA,qEAAAA,gGAAAA,4DAAAA;;;;;;;;IAHnCA,6DAAAA;IAAyGA,yDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,0DAAAA,gCAAT;IAA2B,CAA3B;IACvGA,6DAAAA;IACEA,yDAAAA;IACAA,yDAAAA;IACFA,2DAAAA;IACAA,6DAAAA;IAAiCA,qDAAAA;IAAgBA,2DAAAA;;;;;;;IALoBA,0DAAAA;IAA+DA,yDAAAA;IAE5HA,wDAAAA;IAAAA,yDAAAA;IACAA,wDAAAA;IAAAA,yDAAAA;IAEyBA,wDAAAA;IAAAA,gEAAAA;;;;;;IANrCA,6DAAAA;IACEA,yDAAAA;IAOFA,2DAAAA;;;;;IAP8BA,wDAAAA;IAAAA,yDAAAA;;;;;;;;IAQ9BA,6DAAAA,mBAAyF,CAAzF,EAAyF,KAAzF,EAAyF,EAAzF;IAEkDA,yDAAAA;MAAAA,4DAAAA;MAAA;MAAA,OAASA,0DAAAA,qBAAT;IAAoB,CAApB;IAAhDA,2DAAAA;;;;ADzDE,MAAOC,QAAP,CAAe;EAiDnBC,YAAoBC,MAApB,EAA4CC,eAA5C,EAAqFC,SAArF,EAAgIC,eAAhI,EAAwKC,MAAxK,EAA+LC,SAA/L,EAAkOC,WAAlO,EAAyQC,eAAzQ,EAAyTC,OAAzT,EAAmVC,MAAnV,EAA2WC,WAA3W,EAA6YC,EAA7Y,EAA0aC,UAA1a,EAA0cC,YAA1c,EAAoe;IAAhd;IAAwB;IAAyC;IAA2C;IAAwC;IAAuB;IAAmC;IAAuC;IAAgD;IAA0B;IAAwB;IAAkC;IAA6B;IAAgC;IA/C1c,gBAAW,KAAX;IA2BA,eAAe,EAAf;IACA,cAAc,EAAd;IAEA,mBAAsB,EAAtB;IAeA,iBAAqB,KAArB;IAGE,KAAKF,EAAL,CAAQG,kBAAR,CAA2BlB,sEAA3B,EACCoB,IADD,CACM,MAAK;MACT;MACC,KAAKL,EAAL,CAAQM,SAAR,CAAkB,MAAlB,EAFQ,CAGT;MACA;IACD,CAND,EAOCC,KAPD,CAOOC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,CAA9C,CAPZ,EADke,CAUle;IACA;;IACAX,OAAO,CAACc,GAAR,CAAY,SAAZ,EAAuBN,IAAvB,CAA6BO,GAAD,IAAQ;MAClC,IAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAIC,SAA1B,EAAoC;QAClC,KAAKC,OAAL,GAAeC,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAf,CADkC,CAGlC;QACA;QACA;;QAEA,KAAKK,iBAAL;MACD,CARD,MASI;QACF;QACAR,OAAO,CAACC,GAAR,CAAY,+DAAZ,EAFE,CAGF;;QACA,KAAKlB,eAAL,CAAqB0B,MAArB;MACD;IACF,CAhBD;EAiBD;;EAEDC,QAAQ,IACP,CAjFkB,CAmFnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAC,gBAAgB;IAEd,KAAKvB,OAAL,CAAac,GAAb,CAAiB,oBAAjB,EAAuCN,IAAvC,CAA4CgB,KAAK,IAAG;MAClD,KAAKC,QAAL,GAAgBD,KAAhB;IACD,CAFD,EAFc,CAMd;IACA;IAEA;IACA;EACD;;EAEDE,cAAc,IACZ;IACA;EACD;;EAEKC,SAAS;IAAA;;IAAA;MACb,MAAMC,KAAK,SAAS,KAAI,CAAC/B,SAAL,CAAegC,MAAf,CAAsB;QACxCC,MAAM,EAAE,qBADgC;QAExCC,SAAS,EAAE,uDAF6B;QAGxCC,OAAO,EAAE,CAAC,WAAD;MAH+B,CAAtB,CAApB;MAKA,MAAMJ,KAAK,CAACK,OAAN,EAAN;IANa;EAOd,CAvHkB,CAyHnb,iBAAiB;IAEf;IAEA;IACA,KAAKc,IAAL,GAAY,KAAKjB,OAAL,CAAakB,OAAb,CAAqBC,IAAjC;IACA,KAAKC,MAAL,GAAc,KAAKpB,OAAL,CAAakB,OAAb,CAAqBG,MAAnC;IACA,KAAKC,SAAL,GAAiB,KAAKtB,OAAL,CAAakB,OAAb,CAAqBK,eAAtC;IACA,KAAKC,cAAL,GAAsB,KAAKxB,OAAL,CAAakB,OAAb,CAAqBO,cAA3C,CARe,CASf;IACA;IACA;IACA;IAEA;;IACA,KAAKC,aAAL;EACD,CA5QkB,CA8QnB;EAEA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAA,aAAa;IAEX;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA,KAAKjD,SAAL,CAAekD,eAAf,CAA+B,KAAK3B,OAAL,CAAakB,OAAb,CAAqBU,kBAApD,EACCC,SADD,CAEGC,IAAD,IAAQ;MAAC,KAAKC,cAAL,CAAoBD,IAApB;IAA2B,CAFtC,EAGGE,KAAD,IAAS;MAACrC,OAAO,CAACC,GAAR,CAAYoC,KAAZ;IAAoB,CAHhC;EAKD;;EAEDD,cAAc,CAACD,IAAD,EAAK;IAEjB,IAAIA,IAAI,CAACG,KAAL,IAAc,CAAlB,EAAoB;MAElB,KAAKC,MAAL,GAAc,EAAd;MACA,KAAKC,SAAL,GAAiB,EAAjB;MAEA,IAAIC,SAAS,GAAGN,IAAI,CAACZ,OAArB;;MAEA,KAAI,IAAImB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGD,SAAS,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EACA;QACE,IAAIE,UAAU,GAAGH,SAAS,CAACC,CAAD,CAA1B;QACA,KAAKH,MAAL,CAAYM,IAAZ,CAAiBD,UAAjB;QACA,KAAKJ,SAAL,CAAeK,IAAf,CAAoBD,UAApB;MACD;;MAED,IAAI,KAAKL,MAAL,CAAYI,MAAZ,GAAqB,CAAzB,EAA2B,CAEzB;QACA;QAEA;QACA;QAEA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QACA;QACA;QAEA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QAEA;QACA;QAEA;QACA;QACA;QACA;QAEA;QACA;QAEA;QACA;QACA;QAEA;QACA;MACD,CAtHD,MAuHI;QACF;QACA3C,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAFE,CAGF;;QACA,KAAKlB,eAAL,CAAqB0B,MAArB;MACD;IACF,CA3ID,CA4IA;IA5IA,KA6IK,IAAI0B,IAAI,CAACG,KAAL,IAAc,CAAC,EAAnB,EAAsB;MACzBtC,OAAO,CAACC,GAAR,CAAY,qCAAZ,EADyB,CAEzB;;MACA,KAAKlB,eAAL,CAAqB0B,MAArB;IACD,CAJI,MAKD;MACF;MACAT,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAFE,CAGF;;MACA,KAAKlB,eAAL,CAAqB0B,MAArB;IACD;EACF;;EAEDqC,SAAS,CAACC,EAAD,EAAQ;IAEf,IAAI,KAAKP,SAAL,IAAkB,IAAlB,IAA0B,KAAKA,SAAL,IAAkBpC,SAAhD,EAA0D;MACxD;MACA,KAAKmC,MAAL,GAAc,KAAKC,SAAnB;MAEA,KAAKQ,WAAL,GAAmB,EAAnB,CAJwD,CAMxD;;MACA,MAAM7C,GAAG,GAAG4C,EAAE,CAACE,MAAH,CAAUC,KAAtB,CAPwD,CASxD;;MACA,IAAI/C,GAAG,IAAIA,GAAG,CAACgD,IAAJ,MAAc,EAAzB,EAA6B;QAC3B,KAAKH,WAAL,GAAmB7C,GAAnB;QACA,KAAKoC,MAAL,GAAc,KAAKA,MAAL,CAAYa,MAAZ,CAAoBC,KAAD,IAAU;UACzC,OAASA,KAAK,CAAC3B,MAAN,CAAa4B,WAAb,GAA2BC,OAA3B,CAAmCpD,GAAG,CAACmD,WAAJ,EAAnC,IAAwD,CAAC,CAAlE;QACD,CAFa,CAAd;MAGD;IACF;EACF;;EAEDE,oBAAoB,CAACC,OAAD,EAAgB;IAElC;IAEA,IAAI,KAAKlB,MAAL,CAAYI,MAAZ,GAAqB,CAAzB,EAA2B;MACzB,KAAI,IAAID,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAKH,MAAL,CAAYI,MAA7B,EAAqCD,CAAC,EAAtC,EACA;QACE,IAAIW,KAAK,GAAG,KAAKd,MAAL,CAAYG,CAAZ,CAAZ;QAEA,IAAIW,KAAK,CAACK,OAAN,IAAiBD,OAArB,EACE,KAAKE,QAAL,GAAgBjB,CAAhB;MACH;IACF,CARD,MASI;MACF,KAAKiB,QAAL,GAAgB,CAAhB;IACD,CAfiC,CAiBlC;;EAED;;EAEKC,SAAS;IAAA;;IAAA;MAEb,IAAI,MAAI,CAACrB,MAAL,CAAYI,MAAZ,GAAqB,CAAzB,EAA2B;QAEzB,IAAIkB,aAAa,GAAG,EAApB;;QACA,KAAI,IAAInB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,MAAI,CAACH,MAAL,CAAYI,MAA7B,EAAqCD,CAAC,EAAtC,EACA;UACE,IAAIW,KAAK,GAAG,MAAI,CAACd,MAAL,CAAYG,CAAZ,CAAZ;UAEAmB,aAAa,CAAChB,IAAd,CAAmB;YACjBiB,IAAI,EAAE,OADW;YAEjBC,KAAK,EAAGV,KAAK,CAAC3B,MAFG;YAGjBwB,KAAK,EAAGG,KAAK,CAACK,OAHG;YAIjBM,OAAO,EAAGX,KAAK,CAACK,OAAN,KAAkB,MAAI,CAACD;UAJhB,CAAnB;QAMD;;QAED,IAAIzC,KAAK,SAAS,MAAI,CAAC/B,SAAL,CAAegC,MAAf,CAAsB;UACtCC,MAAM,EAAE,aAD8B;UAEtC+C,MAAM,EAAGJ,aAF6B;UAGtCzC,OAAO,EAAE,CACP;YACE8C,IAAI,EAAE,UADR;YAEEC,OAAO,EAAE,MAAK,CACb;UAHH,CADO,EAMP;YACED,IAAI,EAAE,aADR;YAEEC,OAAO,EAAEhC,IAAI,IAAG;cACd;cACA,MAAI,CAACiC,WAAL,CAAiBjC,IAAjB;YACD;UALH,CANO;QAH6B,CAAtB,CAAlB;QAmBA,MAAMnB,KAAK,CAACK,OAAN,EAAN;MAED;IAtCY;EAuCd;;EAEKgD,gBAAgB,CAAChB,KAAD,EAAW;IAAA;;IAAA;MAE/B,MAAMiB,OAAO,SAAS,MAAI,CAACpF,WAAL,CAAiB+B,MAAjB,CAAwB;QAC5CsD,OAAO,EAAE,mBADmC;QAE5CC,QAAQ,EAAE;MAFkC,CAAxB,CAAtB;MAIA,MAAMF,OAAO,CAACjD,OAAR,EAAN,CAN+B,CAQ/B;MAEA;MAEA;MACA;MAEA;;MACA,MAAI,CAAC+C,WAAL,CAAiBf,KAAjB;IAhB+B;EAiBhC;;EAEKe,WAAW,CAACf,KAAD,EAAW;IAAA;;IAAA;MAE1B,MAAMiB,OAAO,SAAS,MAAI,CAACpF,WAAL,CAAiB+B,MAAjB,CAAwB;QAC5CsD,OAAO,EAAE,mBADmC;QAE5CC,QAAQ,EAAE;MAFkC,CAAxB,CAAtB;MAIA,MAAMF,OAAO,CAACjD,OAAR,EAAN,CAN0B,CAQ1B;MAEA;;MACArB,OAAO,CAACC,GAAR,CAAYoD,KAAK,CAACK,OAAlB,EAX0B,CAa1B;MACA;MAEA;MACA;MAEA;;MACA,MAAI,CAACD,OAAL,GAAeJ,KAAK,CAACK,OAArB;MACA,MAAI,CAACe,WAAL,GAAmBpB,KAAK,CAACqB,WAAzB;MACA,MAAI,CAACC,WAAL,GAAmBtB,KAAK,CAAC3B,MAAzB;MACA,MAAI,CAACkD,SAAL,GAAiBvB,KAAK,CAACwB,IAAvB;MACA,MAAI,CAACC,MAAL,GAAczB,KAAK,CAAC0B,MAApB;MACA,MAAI,CAACC,SAAL,GAAiB3B,KAAK,CAAC4B,SAAvB;MACA,MAAI,CAACC,aAAL,GAAqB7B,KAAK,CAAC8B,OAA3B;MACA,MAAI,CAACC,UAAL,GAAkB/B,KAAK,CAACgC,IAAxB;MACA,MAAI,CAACC,UAAL,GAAkBjC,KAAK,CAACkC,UAAxB;MACA,MAAI,CAACC,YAAL,GAAoBnC,KAAK,CAACoC,MAA1B;MACA,MAAI,CAACC,YAAL,GAAoBrC,KAAK,CAACsC,MAA1B;MACA,MAAI,CAACC,UAAL,GAAkBvC,KAAK,CAACwC,IAAxB;MACA,MAAI,CAACC,aAAL,GAAqBzC,KAAK,CAAC0C,OAA3B;MACA,MAAI,CAACC,oBAAL,GAA4B3C,KAAK,CAAC4C,cAAlC;MACA,MAAI,CAACC,gBAAL,GAAwB7C,KAAK,CAAC8C,UAA9B;MACA,MAAI,CAACC,YAAL,GAAoB/C,KAAK,CAACgD,MAA1B;MACA,MAAI,CAACC,gBAAL,GAAwBjD,KAAK,CAACkD,UAA9B;MACA,MAAI,CAACC,kBAAL,GAA0BnD,KAAK,CAACoD,YAAhC;MACA,MAAI,CAACC,mBAAL,GAA2BrD,KAAK,CAACsD,aAAjC;MACA,MAAI,CAACC,oBAAL,GAA4BvD,KAAK,CAACwD,cAAlC;MACA,MAAI,CAACC,iBAAL,GAAyBzD,KAAK,CAAC0D,WAA/B;MACA,MAAI,CAACC,cAAL,GAAsB3D,KAAK,CAAC4D,QAA5B,CAzC0B,CA2C1B;;MACA,MAAM,MAAI,CAAC7H,OAAL,CAAa8H,GAAb,CAAiB,SAAjB,EAA4B,MAAI,CAACzD,OAAjC,CAAN,CA5C0B,CA8C1B;;MACA,MAAM,MAAI,CAACrE,OAAL,CAAa8H,GAAb,CAAiB,aAAjB,EAAgC,MAAI,CAACvC,WAArC,CAAN,CA/C0B,CAiD1B;;MACA,MAAM,MAAI,CAACvF,OAAL,CAAa8H,GAAb,CAAiB,aAAjB,EAAgC,MAAI,CAACzC,WAArC,CAAN,CAlD0B,CAoD1B;;MACA,MAAM,MAAI,CAACrF,OAAL,CAAa8H,GAAb,CAAiB,WAAjB,EAA8B,MAAI,CAACtC,SAAnC,CAAN,CArD0B,CAuD1B;;MACA,MAAM,MAAI,CAACxF,OAAL,CAAa8H,GAAb,CAAiB,WAAjB,EAA8B,MAAI,CAAClC,SAAnC,CAAN,CAxD0B,CA0D1B;;MACA,MAAM,MAAI,CAAC5F,OAAL,CAAa8H,GAAb,CAAiB,eAAjB,EAAkC,MAAI,CAAChC,aAAvC,CAAN,CA3D0B,CA6D1B;;MACA,MAAM,MAAI,CAAC9F,OAAL,CAAa8H,GAAb,CAAiB,YAAjB,EAA+B,MAAI,CAAC9B,UAApC,CAAN,CA9D0B,CAgE1B;;MACA,MAAM,MAAI,CAAChG,OAAL,CAAa8H,GAAb,CAAiB,YAAjB,EAA+B,MAAI,CAAC5B,UAApC,CAAN,CAjE0B,CAmE1B;;MACA,MAAM,MAAI,CAAClG,OAAL,CAAa8H,GAAb,CAAiB,cAAjB,EAAiC,MAAI,CAAC1B,YAAtC,CAAN,CApE0B,CAsE1B;;MACA,MAAM,MAAI,CAACpG,OAAL,CAAa8H,GAAb,CAAiB,cAAjB,EAAiC,MAAI,CAACxB,YAAtC,CAAN,CAvE0B,CAyE1B;;MACA,MAAM,MAAI,CAACtG,OAAL,CAAa8H,GAAb,CAAiB,YAAjB,EAA+B,MAAI,CAACtB,UAApC,CAAN,CA1E0B,CA4E1B;;MACA,MAAM,MAAI,CAACxG,OAAL,CAAa8H,GAAb,CAAiB,eAAjB,EAAkC,MAAI,CAACpB,aAAvC,CAAN,CA7E0B,CA+E1B;;MACA,MAAM,MAAI,CAAC1G,OAAL,CAAa8H,GAAb,CAAiB,sBAAjB,EAAyC,MAAI,CAAClB,oBAA9C,CAAN,CAhF0B,CAkF1B;;MACA,MAAM,MAAI,CAAC5G,OAAL,CAAa8H,GAAb,CAAiB,kBAAjB,EAAqC,MAAI,CAAChB,gBAA1C,CAAN,CAnF0B,CAqF1B;;MACA,MAAM,MAAI,CAAC9G,OAAL,CAAa8H,GAAb,CAAiB,cAAjB,EAAiC,MAAI,CAACd,YAAtC,CAAN,CAtF0B,CAwF1B;;MACA,MAAM,MAAI,CAAChH,OAAL,CAAa8H,GAAb,CAAiB,oBAAjB,EAAuC,MAAI,CAACV,kBAA5C,CAAN,CAzF0B,CA2F1B;;MACA,MAAM,MAAI,CAACpH,OAAL,CAAa8H,GAAb,CAAiB,kBAAjB,EAAqC,MAAI,CAACZ,gBAA1C,CAAN,CA5F0B,CA8F1B;MACA;MAEA;;MACA,MAAI,CAACtH,MAAL,CAAYmI,OAAZ,CAAoB,aAApB,EAlG0B,CAoG1B;MACA;MACA;MACA;MAEA;MACA;MAEA;MACA;MACA;MAEA;MAEA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;;IAhI0B;EAkI3B;;EAEDC,aAAa;IAEX,KAAKxI,MAAL,CAAYyI,QAAZ,CAAqB,CAAC,mBAAD,CAArB;EACD;;EAEKC,KAAK;IAAA;;IAAA;MACT,MAAMC,OAAO,SAAS,MAAI,CAACtI,SAAL,CAAegC,MAAf,CAAsB;QAC1CC,MAAM,EAAE,gBADkC;QAE1CqD,OAAO,EAAE,gCAFiC;QAG1CnD,OAAO,EAAE,CACP;UACE8C,IAAI,EAAE,UADR;UAEEC,OAAO,EAAE,MAAK,CACb;QAHH,CADO,EAMP;UACED,IAAI,EAAE,SADR;UAEEC,OAAO,EAAE,MAAK;YACZ;YACA,MAAI,CAACpF,eAAL,CAAqB0B,MAArB;UACD;QALH,CANO;MAHiC,CAAtB,CAAtB;MAkBA,MAAM8G,OAAO,CAAClG,OAAR,EAAN;IAnBS;EAoBV,CA5uBkB,CA8uBnB;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EAEA;EACA;EACA;EACA;EACA;;;EAEMmG,WAAW;IAAA;;IAAA;MAEf,MAAMxG,KAAK,SAAS,MAAI,CAAC/B,SAAL,CAAegC,MAAf,CAAsB;QACxCC,MAAM,EAAE,qBADgC;QAExCC,SAAS,EAAE,0DAF6B;QAGxCC,OAAO,EAAE,CAAC,WAAD;MAH+B,CAAtB,CAApB;MAKA,MAAMJ,KAAK,CAACK,OAAN,EAAN;IAPe;EAQhB;;EAEKoG,SAAS;IAAA;;IAAA;MAEb,MAAMzG,KAAK,SAAS,MAAI,CAAC/B,SAAL,CAAegC,MAAf,CAAsB;QACxCC,MAAM,EAAE,YADgC;QAExCC,SAAS,EAAE,+FAF6B;QAGxCC,OAAO,EAAE,CAAC,WAAD;MAH+B,CAAtB,CAApB;MAKA,MAAMJ,KAAK,CAACK,OAAN,EAAN;IAPa;EAQd;;EAEKqG,QAAQ;IAAA;;IAAA;MACZ,MAAMC,WAAW,SAAS,MAAI,CAACxI,eAAL,CAAqB8B,MAArB,CAA4B;QACpDC,MAAM,EAAE,WAD4C;QAEpD0G,QAAQ,EAAE,iBAF0C;QAGpDxG,OAAO,EAAE,CACP;UACA8C,IAAI,EAAE,YADN;UAEA2D,IAAI,EAAE,kBAFN;UAGA1D,OAAO,EAAE,MAAK;YACZ,MAAI,CAACiD,aAAL;UACD;QALD,CADO,EAQT;UACElD,IAAI,EAAE,eADR;UAEE2D,IAAI,EAAE,eAFR;UAGE1D,OAAO,EAAE,MAAK;YACZ,MAAI,CAACmD,KAAL;UACD;QALH,CARS,EAcN;UACDpD,IAAI,EAAE,UADL;UAED2D,IAAI,EAAE,OAFL;UAGDC,IAAI,EAAE,QAHL;UAID3D,OAAO,EAAE,MAAK;YACZnE,OAAO,CAACC,GAAR,CAAY,gBAAZ;UACD;QANA,CAdM;MAH2C,CAA5B,CAA1B;MA0BA,MAAM0H,WAAW,CAACtG,OAAZ,EAAN;IA3BY;EA4Bb;;AA/yBkB;;;mBAAR3C,UAAQD,gEAAAA,CAAAA,oDAAAA,GAAAA,gEAAAA,CAAAA,8EAAAA,GAAAA,gEAAAA,CAAAA,+EAAAA,GAAAA,gEAAAA,CAAAA,6DAAAA,GAAAA,gEAAAA,CAAAA,2DAAAA,GAAAA,gEAAAA,CAAAA,4DAAAA,GAAAA,gEAAAA,CAAAA,8DAAAA,GAAAA,gEAAAA,CAAAA,kEAAAA,GAAAA,gEAAAA,CAAAA,4DAAAA,GAAAA,gEAAAA,CAAAA,uEAAAA,GAAAA,gEAAAA,CAAAA,yDAAAA,GAAAA,gEAAAA,CAAAA,0FAAAA,GAAAA,gEAAAA,CAAAA,gFAAAA,GAAAA,gEAAAA,CAAAA,wEAAAA;AAAA;;;QAARC;EAAQqJ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCtBrB1J,6DAAAA,kBAAY,CAAZ,EAAY,aAAZ,EAAY,CAAZ;MAEMA,wDAAAA,sBAac,CAbd,EAac,aAbd,EAac,CAbd;MAuBAA,6DAAAA;MAAWA,qDAAAA;MAAMA,2DAAAA;MAIvBA,6DAAAA,sBAAuD,CAAvD,EAAuD,QAAvD,EAAuD,CAAvD;MAGMA,yDAAAA;MACAA,yDAAAA;MACAA,wDAAAA;MAQFA,2DAAAA;MACAA,6DAAAA;MAEEA,yDAAAA;MACAA,yDAAAA;MACAA,yDAAAA;MACFA,2DAAAA;MACAA,yDAAAA;MACAA,yDAAAA;MAMAA,6DAAAA,gBAAS,EAAT,EAAS,YAAT,EAAS,EAAT;MAIgDA,yDAAAA;QAAA,OAAS2J,cAAT;MAAmB,CAAnB;MAG9C3J,wDAAAA;MAAmEA,qDAAAA;;MAErEA,2DAAAA;MAEFA,6DAAAA;MAAeA,yDAAAA;QAAA,OAAY2J,qBAAZ;MAA6B,CAA7B;MAA0D3J,2DAAAA;MACzEA,yDAAAA;MASAA,yDAAAA;MAgCFA,2DAAAA;;;;MAhFqCA,wDAAAA;MAAAA,yDAAAA;MAGrBA,wDAAAA;MAAAA,yDAAAA;MACAA,wDAAAA;MAAAA,yDAAAA;MAYCA,wDAAAA;MAAAA,yDAAAA;MACLA,wDAAAA;MAAAA,yDAAAA;MACAA,wDAAAA;MAAAA,yDAAAA;MAEHA,wDAAAA;MAAAA,yDAAAA;MACAA,wDAAAA;MAAAA,yDAAAA;MAagEA,wDAAAA;MAAAA,iEAAAA,YAAAA,0DAAAA;MAK5DA,wDAAAA;MAAAA,yDAAAA;MASmCA,wDAAAA;MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACzEhD,MAAM,SAAS,GAAG,oBAAoB;AAK/B,MAAM,YAAY;IAGvB,YAAoB,GAAa,EAAU,OAAgB;QAAvC,QAAG,GAAH,GAAG,CAAU;QAAU,YAAO,GAAP,OAAO,CAAS;QAF3D,aAAQ,GAAG,KAAK,CAAC;QAGf,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAEzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACvC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,MAAM,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC;YAEtE,aAAa;YACb,iCAAiC;YACjC,iCAAiC;YACjC,MAAM;YAEN,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;gBACzC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,IAAI;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,IAAI,CAAC,QAAQ,EAAC;YAChB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACrC;aAAM;YACL,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;;wEAvCU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM","sources":["./src/app/pages/home/home-routing.module.ts","./src/app/pages/home/home.module.ts","./src/app/pages/home/home.page.ts","./src/app/pages/home/home.page.html","./src/app/services/theme.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","import { Component, OnInit} from '@angular/core';\nimport { AlertController, LoadingController, ActionSheetController} from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { NavparamService } from 'src/app/services/navparam.service';\nimport { AulavirtualrestProvider } from '../../providers/aulavirtualrest';\nimport { LogoutProvider } from '../../providers/logout';\nimport { Storage } from '@ionic/storage-angular';\nimport { DecimalPipe, NumberSymbol } from '@angular/common';\nimport { Device } from '@awesome-cordova-plugins/device/ngx';\nimport { GoogleAnalytics } from '@awesome-cordova-plugins/google-analytics/ngx';\nimport { CallNumber } from '@awesome-cordova-plugins/call-number/ngx';\nimport { AppConfig } from  '../../../app/app.config';\nimport { Observable } from 'rxjs';\nimport { EventService } from 'src/app/services/event.service';\nimport { Events } from 'src/app/services/events';\nimport { ThemeService } from 'src/app/services/theme.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  \n  darkMode = false;\n\n  idAcademia: number;\n  nombreAcademia: string;\n  curso: any;\n  idCurso: number;\n  idOposicion: number;\n  tipoCurso: number; // 0 = Presencial, 1 = Online\n  imagen: number;\n  mesAcceso: number; // Mes de acceso del alumno en el curso\n  accesoModulos: number;\n  accesoTest: number;\n  accesoDocs: number;\n  accesoVideos: number;\n  accesoForo: number;\n  accesoEventos: number;\n  accesoClases: number;\n  accesoNotificaciones: number;\n  accesoOrtografia: number;\n  accesoIngles: number;\n  accesoPersonalidad: number;\n  accesoSimulacros: number;\n  accesoCasosPracticos: number;\n  accesoPsicotecnicos: number;\n  accesoLegislacion: number;\n  accesoNivelPro: number;  \n  \n  usuario: any = [];\n  cursos: any = [];  \n  allCursos: any[];\n  searchQuery: string = '';\n  nombreCurso: string;\n  nick: string;\n  nombre: string;\n  oposicion: any;\n  resultados: number;\n  aprobados: number;\n  media: string;\n  semanal: number;\n  contactoSeleccionado: any;\n  asunto: string;\n  mensaje: string;\n  destinatario: string;\n  infoDispositivo: string;\n  posicion: number;\n  refrescar: boolean = false;\n\n  constructor(private router: Router, private navParamService: NavparamService, public proveedor: AulavirtualrestProvider, public proveedorLogout: LogoutProvider, public events: Events, public alertCtrl: AlertController, public loadingCtrl: LoadingController, public actionSheetCtrl: ActionSheetController, private storage: Storage, private device: Device, private decimalPipe: DecimalPipe, private ga: GoogleAnalytics, private callNumber: CallNumber, private themeService: ThemeService) { \n    this.ga.startTrackerWithId(AppConfig.googleAnalytics)\n    .then(() => {\n      //console.log('Google analytics is ready now');\n       this.ga.trackView('test');\n      // Tracker is ready\n      // You can now track pages or set additional information such as AppVersion or UserId\n    })\n    .catch(e => console.log('Error starting GoogleAnalytics', e));  \n\n    // console.log('[i] Constructor: Se obtienen los datos del usuario de la memoria');\n    // Se obtienen los datos del usuario de la memoria\n    storage.get('usuario').then((val) => {\n      if (val != null && val != undefined){\n        this.usuario = JSON.parse(val);\n\n        // console.log('[i] AuthorizationToken: ' + this.usuario.Mensaje.AuthorizationToken);\n        // console.log('[i] Nick: ' + this.usuario.Mensaje.Nick);\n        // console.log('[i] Oposicion: ' + this.usuario.Mensaje.NombreOposicion);\n\n        this.inicializarPerfil();\n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        console.log('[!] Constructor: No se ha recuperado el usuario de la memoria');\n        //this.logout();\n        this.proveedorLogout.logout()\n      }\n    });    \n  }\n\n  ngOnInit() {    \n  }\n\n  // ionViewWillEnter() {\n  //   // Remember me\n  //   this.storage.get('idCurso').then((val) => {\n  //     if (val != null && val != undefined){\n  //       this.navCtrl.push(TabsPage);\n  //     }\n  //   }, (error) => {\n  //     console.log('login is required');\n  //   });\n  // }\n\n  ionViewWillEnter() {        \n\n    this.storage.get('selected-app-theme').then(theme => {\n      this.darkMode = theme;\n    });\n\n    // if (this.curso != null)\n    //   this.cargarCurso(this.curso);\n\n    //this.obtenerEstadisticas();\n    //this.refrescar = false;\n  }\n\n  ionViewDidLoad(){    \n    // console.log('ionViewDidLoad');\n    // this.obtenerEstadisticas();\n  }\n\n  async ayudaMenu() {\n    const alert = await this.alertCtrl.create({\n      header: 'Selecciona un curso',\n      subHeader: 'Elige un curso de la lista para poder acceder al menú',\n      buttons: ['Entendido']\n    });\n    await alert.present();\n  }\n\n  // obtenerEstadisticasHome(){\n\n  //   // Se obtienen los datos del usuario de la memoria\n  //   this.storage.get('usuario').then((val) => {\n  //     if (val != null && val != undefined){\n  //       this.usuario = JSON.parse(val);\n\n  //       // Se obtienen el id del curso de la memoria\n  //       this.storage.get('idCurso').then((val) => {\n  //         if (val != null && val != undefined){\n  //           this.idCurso = val;  \n\n  //           //console.log('idCurso = ' + this.idCurso);\n            \n  //           // Se consultan las estadísticas del alumno en el curso\n  //           this.proveedor.consultarEstadisticasCurso(this.usuario.Mensaje.AuthorizationToken, this.idCurso)\n  //           .subscribe(\n  //             (data)=>{this.actualizarEstadisticas(data);},\n  //             (error)=>{console.log(error);}\n  //           )\n  //         }\n  //         else{\n  //           // Se consultan las estadísticas del alumno\n  //           this.proveedor.consultarEstadisticas(this.usuario.Mensaje.AuthorizationToken)\n  //           .subscribe(\n  //             (data)=>{this.actualizarEstadisticas(data);},\n  //             (error)=>{console.log(error);}\n  //           )\n  //         }          \n  //       });        \n  //     }\n  //   });\n  // }\n\n  // obtenerEstadisticas(){\n\n  //   // // Se obtienen los datos del usuario de la memoria\n  //   // await this.storage.get('usuario').then((val) => {\n  //   //   if (val != null && val != undefined){\n  //   //     this.usuario = JSON.parse(val);\n\n  //   //     // Se obtienen el id del curso de la memoria\n  //   //     this.storage.get('idCurso').then((val) => {\n  //   //       if (val != null && val != undefined){\n  //   //         this.idCurso = val;  \n            \n  //   //         // Se consultan las estadísticas del alumno en el curso\n  //   //         this.proveedor.consultarEstadisticasCurso(this.usuario.Mensaje.AuthorizationToken, this.idCurso)\n  //   //         .subscribe(\n  //   //           (data)=>{this.actualizarEstadisticas(data);},\n  //   //           (error)=>{console.log(error);}\n  //   //         )\n  //   //       }\n  //   //       else{\n  //   //         // Se consultan las estadísticas del alumno\n  //   //         this.proveedor.consultarEstadisticas(this.usuario.Mensaje.AuthorizationToken)\n  //   //         .subscribe(\n  //   //           (data)=>{this.actualizarEstadisticas(data);},\n  //   //           (error)=>{console.log(error);}\n  //   //         )\n  //   //       }          \n  //   //     });        \n  //   //   }\n  //   // });\n\n  //   // Se consultan las estadísticas del alumno en el curso\n  //   this.proveedor.consultarEstadisticasCurso(this.usuario.Mensaje.AuthorizationToken, this.idCurso)\n  //   .subscribe(\n  //     (data)=>{this.actualizarEstadisticas(data);},\n  //     (error)=>{console.log(error);}\n  //   )\n\n  // }\n\n\n  // actualizarEstadisticas(data: any){\n\n  //   // console.log ('actualizarEstadisticas');\n  //   // console.log (data);\n\n  //   if (data.Error == 0){\n  //     // Se inicializan las estadísticas del perfil del alumno\n  //     this.resultados = data.Mensaje.Estadisticas.NumResultados;\n  //     this.aprobados = data.Mensaje.Estadisticas.Aprobados;\n  //     this.media = this.decimalPipe.transform(data.Mensaje.Estadisticas.Media/10, '1.2-2');\n  //     this.semanal = data.Mensaje.Estadisticas.Semanales;\n  //   }\n  //   // Acceso denegado\n  //   else if (data.Error == -10){\n  //     console.log('[!] ActualizarEstadisticas: Acceso denegado');\n  //     //this.logout();\n  //     this.proveedorLogout.logout()\n  //   }\n  // }\n\n  // ionViewWillEnter(){\n\n  //   if (this.usuario.length == 0){\n\n  //     console.log('[i] Se obtienen los datos del usuario de la memoria');\n\n  //     // Se obtienen los datos del usuario de la memoria\n  //     this.storage.get('usuario').then((val) => {\n  //       if (val != null && val != undefined){\n  //         this.usuario = JSON.parse(val);\n\n  //         console.log('[i] AuthorizationToken: ' + this.usuario.Mensaje.AuthorizationToken);\n              \n  //         this.nick = this.usuario.Mensaje.Nick;\n  //         this.oposicion = this.usuario.Mensaje.NombreOposicion;\n  //         this.resultados = this.usuario.Mensaje.Estadisticas.NumResultados;\n  //         this.aprobados = this.usuario.Mensaje.Estadisticas.Aprobados;\n  //         this.media = this.decimalPipe.transform(this.usuario.Mensaje.Estadisticas.Media/10, '1.2-2');\n  //         this.semanal = this.usuario.Mensaje.Estadisticas.Semanales;\n\n  //         // Se obtienen los cursos del usuario\n  //         this.obtenerCursos();\n  //       }\n  //       else{\n  //         // Si no se han recuperado los datos se vuelve a la página de login\n  //         console.log('[!] No se ha recuperado el usuario de la memoria');\n  //         this.logout.logout();\n  //       }\n  //     });\n  //   }\n  //   else{\n  //     // Se actualiza la información del perfil usuario\n  //     this.actualizarPerfil();\n  //   }\n  // }\n\n  inicializarPerfil(){\n\n    // console.log('[i] Inicializando perfil');\n\n    // Se inicializan los datos del perfil del alumno\n    this.nick = this.usuario.Mensaje.Nick;\n    this.nombre = this.usuario.Mensaje.Nombre;\n    this.oposicion = this.usuario.Mensaje.NombreOposicion;\n    this.nombreAcademia = this.usuario.Mensaje.NombreAcademia;\n    // this.resultados = this.usuario.Mensaje.Estadisticas.NumResultados;\n    // this.aprobados = this.usuario.Mensaje.Estadisticas.Aprobados;\n    // this.media = this.decimalPipe.transform(this.usuario.Mensaje.Estadisticas.Media/10, '1.2-2');\n    // this.semanal = this.usuario.Mensaje.Estadisticas.Semanales;\n\n    // Se obtienen los cursos del usuario\n    this.obtenerCursos();\n  }\n\n  // actualizarPerfil(){\n\n  //   // console.log('[i] Actualizando perfil');\n\n  //   const loader = this.loadingCtrl.create({\n  //     content: \"Cargando...\"\n  //   });\n  //   loader.present();\n\n  //   // Se obtienen los datos del perfil del usuario\n  //   // console.log('[i] AuthorizationToken: ' + this.usuario.Mensaje.AuthorizationToken);\n  //   this.proveedor.obtenerPerfil(this.usuario.Mensaje.AuthorizationToken, AppConfig.id)\n  //   .subscribe(\n  //     (data)=>{this.parsePerfilJson(data);},\n  //     (error)=>{console.log(error);},\n  //     () =>{loader.dismiss()}\n  //   )\n  // }\n\n  // parsePerfilJson(data)\n  // {\n  //   if (data.Error == 0){\n\n  //     // Se actualiza la información del usuario\n  //     this.nick = data.Mensaje.Nick;\n  //     this.oposicion = data.Mensaje.NombreOposicion;\n  //     this.resultados = data.Mensaje.Estadisticas.NumResultados;\n  //     this.aprobados = data.Mensaje.Estadisticas.Aprobados;\n  //     this.media = this.decimalPipe.transform(data.Mensaje.Estadisticas.Media/10, '1.2-2');\n  //     this.semanal = data.Mensaje.Estadisticas.Semanales;     \n  //   }\n  //   // Acceso denegado\n  //   else if (data.Error == -10){\n  //     console.log('[!] parsePerfilJson: Acceso denegado');\n  //     this.logout();\n  //   }\n  //   else{\n  //     // Si no se han recuperado los datos se vuelve a la página de login\n  //     console.log('[!] No se han recuperado los datos del usuario');\n  //     this.logout();\n  //   }\n  // }\n\n  obtenerCursos(){\n\n    //console.log('obteniendo cursos...');\n    // console.log('[i] Obteniendo cursos');\n\n    // const loader = this.loadingCtrl.create({\n    //   content: \"Cargando...\",\n    //   duration: 500\n    // });\n    // loader.present();\n\n    // Se obtienen los cursos del usuario\n    // console.log('[i] AuthorizationToken: ' + this.usuario.Mensaje.AuthorizationToken);\n    this.proveedor.consultarCursos(this.usuario.Mensaje.AuthorizationToken)\n    .subscribe(\n      (data)=>{this.parseCursoJson(data);},\n      (error)=>{console.log(error);}\n    )\n  }\n\n  parseCursoJson(data)\n  {\n    if (data.Error == 0){\n\n      this.cursos = [];\n      this.allCursos = [];\n\n      let jsonArray = data.Mensaje;\n\n      for(let i=0; i < jsonArray.length; i++)\n      {\n        let jsonObject = jsonArray[i];\n        this.cursos.push(jsonObject);\n        this.allCursos.push(jsonObject);\n      }\n\n      if (this.cursos.length > 0){\n\n        // // Por defecto se inicializa la posicion al primer curso\n        // this.posicion = 0;\n\n        // // Se comprueba si había un curso cargado en memoria\n        // this.storage.get('idCurso').then((val) => {\n\n        //   if (val != null && val != undefined){   \n            \n        //     // Se busca el curso por su ID -- SI EL ALUMNO HA SIDO DESMATRICULADO DEL CURSO GENERA ERROR\n        //     //let curso = this.cursos.find(c=>c.IdCurso == val)\n\n        //     // Se busca el curso dentro del listado para saber la posición en la lista\n        //     this.obtenerPosicionCurso(val); \n          \n        //     // // Se carga el curso\n        //     // this.refrescar = true;\n        //     // this.cargarCurso(val)\n        //   }\n\n        // }, (error) => {\n        //   console.log('login is required');\n        // });\n\n        // // Se inicializa el curso\n        // this.idCurso = this.cursos[this.posicion].IdCurso;\n        // this.idOposicion = this.cursos[this.posicion].IdOposicion;\n        // this.nombreCurso = this.cursos[this.posicion].Nombre;\n        // this.tipoCurso = this.cursos[this.posicion].Tipo;\n        // this.imagen = this.cursos[this.posicion].Imagen;\n        // this.mesAcceso = this.cursos[this.posicion].MesAcceso;\n        // this.accesoModulos = this.cursos[this.posicion].Modulos;\n        // this.accesoTest = this.cursos[this.posicion].Test;\n        // this.accesoDocs = this.cursos[this.posicion].Documentos;\n        // this.accesoVideos = this.cursos[this.posicion].Videos;\n        // this.accesoForo = this.cursos[this.posicion].Foro;\n        // this.accesoEventos = this.cursos[this.posicion].Eventos;\n        // this.accesoOrtografia = this.cursos[this.posicion].Ortografia;\n        // this.accesoIngles = this.cursos[this.posicion].Ingles;\n        // this.accesoPersonalidad = this.cursos[this.posicion].Personalidad;\n        \n        // this.accesoPsicotecnicos = this.cursos[this.posicion].Psicotecnicos;\n        // this.accesoCasosPracticos = this.cursos[this.posicion].CasosPracticos;\n        // this.accesoLegislacion = this.cursos[this.posicion].Legislacion;\n        // this.accesoNivelPro = this.cursos[this.posicion].NivelPRO;\n\n        // // Se almacena en memoria el id del curso \n        // this.storage.set('idCurso', this.idCurso);\n\n        // // Se almacena en memoria el id de la oposicion del curso\n        // this.storage.set('idOposicion', this.idOposicion);\n\n        // // Se almacena en memoria el tipo de curso\n        // this.storage.set('tipoCurso', this.tipoCurso);\n\n        // // Se almacena en memoria el mes de acceso al curso\n        // this.storage.set('mesAcceso', this.mesAcceso);\n\n        // // Se almacena en memoria los permisos de acceso a módulos\n        // this.storage.set('accesoModulos', this.accesoModulos);\n\n        // // Se almacena en memoria los permisos de acceso a test\n        // this.storage.set('accesoTest', this.accesoTest);\n\n        // // Se almacena en memoria los permisos de acceso a documentos\n        // this.storage.set('accesoDocs', this.accesoDocs);\n\n        // // Se almacena en memoria los permisos de acceso a videos\n        // this.storage.set('accesoVideos', this.accesoVideos);\n\n        // // Se almacena en memoria los permisos de acceso al foro\n        // this.storage.set('accesoForo', this.accesoForo);\n\n        // // Se almacena en memoria los permisos de acceso a eventos\n        // this.storage.set('accesoEventos', this.accesoEventos);\n\n        // // Se almacena en memoria los permisos de acceso a test de ortografía\n        // this.storage.set('accesoOrtografia', this.accesoOrtografia);\n\n        // // Se almacena en memoria los permisos de acceso a test de inglés\n        // this.storage.set('accesoIngles', this.accesoIngles);\n\n        // // Se almacena en memoria los permisos de acceso a test de personalidad\n        // this.storage.set('accesoPersonalidad', this.accesoPersonalidad);\n\n        // // // Si es un curso online\n        // // if (this.tipoCurso == 1)\n        // // {\n        // //   // Se almacena el mes de acceso al curso en memoria\n        // //   this.storage.set('mesAcceso', this.mesAcceso);\n        // // }\n        // // else\n        // // {\n        // //   // Se almacena el mes de acceso a 0 en memoria\n        // //   this.storage.set('mesAcceso', 0);\n        // // }\n\n        // // Se obtienen las estadísticas del alumno en ese curso\n        // this.obtenerEstadisticas();\n\n        // // Se refresca el menú para mostrar/ocultar opciones según permisos\n        // this.events.publish('tabs:reload');\n\n        // // if (this.refrescar)\n        // // {\n        // //   //console.log('Refresca');\n        // //   //const observer = new Observable()\n\n        // //   // https://ionicframework.com/docs/v3/api/util/Events/\n        // //   //this.events.publish('tabs:reload');\n          \n        // //   // this.events.publishSomeData({\n        // //   //   tabs: 'reload'\n        // //   // });\n\n        // //   this.events.publish('tabs:reload');\n        // // }\n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        console.log('[!] No se ha recuperado ningún curso');\n        //this.logout();\n        this.proveedorLogout.logout()\n      }\n    }\n    // Acceso denegado\n    else if (data.Error == -10){\n      console.log('[!] parseCursoJson: Acceso denegado');\n      //this.logout();\n      this.proveedorLogout.logout()\n    }\n    else{\n      // Si no se han recuperado los datos se vuelve a la página de login\n      console.log('[!] No se han recuperado los datos de cursos');\n      //this.logout();\n      this.proveedorLogout.logout()\n    }\n  }\n\n  getCursos(ev: any) {\n\n    if (this.allCursos != null && this.allCursos != undefined){\n      // Reset items back to all of the items\n      this.cursos = this.allCursos;\n\n      this.searchQuery = '';\n\n      // set val to the value of the searchbar\n      const val = ev.target.value;\n\n      // if the value is an empty string don't filter the items\n      if (val && val.trim() != '') {\n        this.searchQuery = val;\n        this.cursos = this.cursos.filter((curso) => {\n          return ((curso.Nombre.toLowerCase().indexOf(val.toLowerCase()) > -1));\n        })\n      }\n    }\n  }\n\n  obtenerPosicionCurso(idCurso: number){\n\n    //console.log('obtenerPosicionCurso - idCurso = ' + idCurso);\n\n    if (this.cursos.length > 1){\n      for(let i=0; i < this.cursos.length; i++)\n      {\n        let curso = this.cursos[i];\n\n        if (curso.IdCurso == idCurso)\n          this.posicion = i;\n      }\n    }\n    else{\n      this.posicion = 0;\n    }\n\n    //console.log('obtenerPosicionCurso - posicion = ' + this.posicion);\n\n  }\n\n  async verCursos() {\n\n    if (this.cursos.length > 1){\n\n      let radio_options = [];\n      for(let i=0; i < this.cursos.length; i++)\n      {\n        let curso = this.cursos[i];\n\n        radio_options.push({\n          type: 'radio',\n          label : curso.Nombre,\n          value : curso.IdCurso,\n          checked : curso.IdCurso === this.idCurso\n        });\n      }    \n\n      let alert = await this.alertCtrl.create({\n        header: 'Mis Cursos:',\n        inputs : radio_options,\n        buttons: [\n          {\n            text: 'Cancelar',  \n            handler: () => {            \n            }          \n          },\n          {\n            text: 'Seleccionar',\n            handler: data => {\n              //this.refrescar = true;\n              this.cargarCurso(data);\n            }\n          }\n        ]\n      });\n      \n      await alert.present();\n\n    }\n  }\n\n  async seleccionarCurso(curso: any)\n  {\n    const loading = await this.loadingCtrl.create({\n      message: \"Cargando curso...\",\n      duration: 500\n    });\n    await loading.present();\n\n    // this.curso = curso;\n    \n    // console.log(this.curso);\n\n    // // Se almacena en memoria el curso \n    // await this.storage.set('curso', this.curso);\n\n    //this.refrescar = true;\n    this.cargarCurso(curso);\n  }\n\n  async cargarCurso(curso: any){\n\n    const loading = await this.loadingCtrl.create({\n      message: \"Cargando curso...\",\n      duration: 500\n    });\n    await loading.present();\n\n    // this.curso = curso;\n    \n    // console.log(this.curso);\n    console.log(curso.IdCurso);\n\n    // // Se almacena en memoria el curso \n    // await this.storage.set('curso', this.curso);\n\n    // Se busca el curso\n    //let curso = this.cursos.find(c=>c.IdCurso == idCurso)    \n\n    // Se carga la información del curso    \n    this.idCurso = curso.IdCurso;\n    this.idOposicion = curso.IdOposicion;\n    this.nombreCurso = curso.Nombre;\n    this.tipoCurso = curso.Tipo;\n    this.imagen = curso.Imagen;\n    this.mesAcceso = curso.MesAcceso;\n    this.accesoModulos = curso.Modulos;\n    this.accesoTest = curso.Test;\n    this.accesoDocs = curso.Documentos;\n    this.accesoVideos = curso.Videos;\n    this.accesoClases = curso.Clases;\n    this.accesoForo = curso.Foro;\n    this.accesoEventos = curso.Eventos;\n    this.accesoNotificaciones = curso.Notificaciones;\n    this.accesoOrtografia = curso.Ortografia;\n    this.accesoIngles = curso.Ingles;\n    this.accesoSimulacros = curso.Simulacros;\n    this.accesoPersonalidad = curso.Personalidad;\n    this.accesoPsicotecnicos = curso.Psicotecnicos;\n    this.accesoCasosPracticos = curso.CasosPracticos;\n    this.accesoLegislacion = curso.Legislacion;\n    this.accesoNivelPro = curso.NivelPRO;\n\n    // Se almacena en memoria el id del curso \n    await this.storage.set('idCurso', this.idCurso);\n\n    // Se almacena en memoria el nombre del curso \n    await this.storage.set('nombreCurso', this.nombreCurso);\n\n    // Se almacena en memoria el id de la oposicion del curso\n    await this.storage.set('idOposicion', this.idOposicion);\n\n    // Se almacena en memoria el tipo de curso\n    await this.storage.set('tipoCurso', this.tipoCurso);\n\n    // Se almacena en memoria el mes de acceso al curso\n    await this.storage.set('mesAcceso', this.mesAcceso);\n\n    // Se almacena en memoria los permisos de acceso a módulos\n    await this.storage.set('accesoModulos', this.accesoModulos);\n\n    // Se almacena en memoria los permisos de acceso a test\n    await this.storage.set('accesoTest', this.accesoTest);\n\n    // Se almacena en memoria los permisos de acceso a documentos\n    await this.storage.set('accesoDocs', this.accesoDocs);\n\n    // Se almacena en memoria los permisos de acceso a videos\n    await this.storage.set('accesoVideos', this.accesoVideos);\n\n    // Se almacena en memoria los permisos de acceso a clases\n    await this.storage.set('accesoClases', this.accesoClases);\n\n    // Se almacena en memoria los permisos de acceso al foro\n    await this.storage.set('accesoForo', this.accesoForo);\n\n    // Se almacena en memoria los permisos de acceso a eventos\n    await this.storage.set('accesoEventos', this.accesoEventos);\n\n    // Se almacena en memoria los permisos de acceso a notificaciones\n    await this.storage.set('accesoNotificaciones', this.accesoNotificaciones);\n\n    // Se almacena en memoria los permisos de acceso a test de ortografía\n    await this.storage.set('accesoOrtografia', this.accesoOrtografia);\n\n    // Se almacena en memoria los permisos de acceso a test de inglés\n    await this.storage.set('accesoIngles', this.accesoIngles);\n\n    // Se almacena en memoria los permisos de acceso a test de personalidad\n    await this.storage.set('accesoPersonalidad', this.accesoPersonalidad);\n\n    // Se almacena en memoria los permisos de acceso a test de simulacros\n    await this.storage.set('accesoSimulacros', this.accesoSimulacros);\n\n    // Se obtienen las estadísticas del alumno en ese curso\n    //this.obtenerEstadisticas();\n\n    // Se refresca el menú para mostrar/ocultar opciones según permisos\n    this.events.publish('tabs:reload');\n\n    // if (this.refrescar)\n    // {\n    //   //console.log('Refresca');\n    //   //const observer = new Observable()\n\n    //   // https://ionicframework.com/docs/v3/api/util/Events/\n    //   //this.events.publish('tabs:reload');\n      \n    //   // this.events.publishSomeData({\n    //   //   tabs: 'reload'\n    //   // });\n\n    //   this.events.publish('tabs:reload');\n\n    // }\n\n    // Se redirecciona al usuario a la página correspondiente\n    // if (this.accesoModulos === 1)\n    //   this.router.navigate(['/modules']);\n    // else if (this.accesoDocs === 1)\n    //   this.router.navigate(['/docs']);\n    // else if (this.accesoVideos === 1)\n    //   this.router.navigate(['/videos']);\n    // else if (this.accesoTest === 1)\n    //   this.router.navigate(['/test']);\n    // else if (this.accesoForo === 1)\n    //   this.router.navigate(['/forum']);\n\n    //console.log(this.idCurso);\n\n  }\n\n  configuracion()\n  {\n    this.router.navigate(['/account-settings']);\n  }\n\n  async salir() {\n    const confirm = await this.alertCtrl.create({\n      header: '¿Deseas salir?',\n      message: 'Se cerrará tu sesión en la app',\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: () => {            \n          }\n        },\n        {\n          text: 'Aceptar',\n          handler: () => {\n            //this.logout();\n            this.proveedorLogout.logout()\n          }\n        }\n      ]\n    });\n    await confirm.present();\n  }\n\n  // logout()\n  // {\n  //   // // Se limpia toda la memoria\n  //   // this.storage.clear();\n  //   // // Se elimina el usuario de la memoria\n  //   // //this.storage.remove('usuario');\n\n  //   // this.ocultarMenu();\n\n  //   this.proveedorLogout.logout()\n\n  //   //const root = this.app.getRootNav();    \n  //   //root.popToRoot();\n  //   //this.navCtrl.setRoot(LoginPage);\n  //   //this.router.navigate(['/login']);\n  // }\n\n  async ayudaCursos()\n  {\n    const alert = await this.alertCtrl.create({\n      header: 'Selecciona un curso',\n      subHeader: 'Elige un curso de la lista para acceder a sus contenidos',\n      buttons: ['Entendido']\n    });\n    await alert.present();\n  }\n\n  async sinCursos()\n  {\n    const alert = await this.alertCtrl.create({\n      header: 'Sin Cursos',\n      subHeader: 'Actualmente no estás matriculado en ningún curso. Contacta con tu centro para más información',\n      buttons: ['Entendido']\n    });\n    await alert.present();\n  }\n\n  async miCuenta() {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'MI CUENTA',\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n        text: 'Configurar',\n        icon: 'settings-outline',        \n        handler: () => {\n          this.configuracion();\n        }\n      }, \n      {\n        text: 'Cerrar sesión',\n        icon: 'power-outline',        \n        handler: () => {\n          this.salir();\n        }\n      }, {\n        text: 'Cancelar',\n        icon: 'close',\n        role: 'cancel',\n        handler: () => {\n          console.log('Cancel clicked');\n        }\n      }]\n    });\n    await actionSheet.present();\n  }\n\n}\n","<ion-header>\n  <ion-toolbar class=\"ion-text-center\" color=\"primary\">\n      <ion-buttons slot=\"start\">\n        <!-- <ion-button *ngIf=\"nombreCurso == null\" (click)=\"ayudaMenu()\">\n          <ion-icon slot=\"icon-only\" name=\"menu-outline\"></ion-icon>\n        </ion-button>\n        <ion-button *ngIf=\"nombreCurso != null\" (click)=\"openMenu()\">\n          <ion-icon slot=\"icon-only\" name=\"menu-outline\"></ion-icon>\n        </ion-button> -->\n        <!-- <ion-button (click)=\"openMenu()\">\n          <ion-icon slot=\"icon-only\" name=\"menu-outline\"></ion-icon>\n        </ion-button> -->\n        <!-- <ion-button (click)=\"miCuenta()\">\n          <ion-icon slot=\"icon-only\" name=\"person-circle-outline\"></ion-icon>\n        </ion-button> -->\n      </ion-buttons>\n      <ion-buttons slot=\"primary\">        \n        <!-- <ion-button (click)=\"notificaciones()\">\n          <ion-icon slot=\"icon-only\" name=\"notifications-outline\"></ion-icon>\n        </ion-button> -->\n        <!-- <ion-button (click)=\"ayuda()\">\n          <ion-icon slot=\"icon-only\" name=\"help-circle-outline\"></ion-icon>\n        </ion-button> -->\n      </ion-buttons>\n\n      <ion-title>Inicio</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-text-center\" [scrollY]=\"false\">\n    <header class=\"ion-padding\">\n      <!-- <ion-img class=\"logo image-center\" src=\"../assets/imgs/logo.png\" style=\"background-color: transparent\" (click)=\"ayuda()\"></ion-img>   -->\n      <ion-img *ngIf=\"darkMode == null || darkMode == false\" class=\"logo image-center\" src=\"../assets/imgs/logo.png\"></ion-img>\n      <ion-img *ngIf=\"darkMode == true\" class=\"logo image-center\" src=\"../assets/imgs/logo-dark.png\"></ion-img>\n      <section>\n        <!-- <ion-chip (click)=\"miCuenta()\">\n          <ion-avatar>\n            <img src=\"https://ionicframework.com/docs/demos/api/avatar/avatar.svg\">\n          </ion-avatar>\n          <ion-label>{{nick | uppercase}}</ion-label>\n        </ion-chip> -->\n      </section>\n    </header>\n    <ion-avatar class=\"image-center\">        \n      <!-- <img *ngIf=\"idCurso == null\" src=\"../assets/imgs/icon.png\" button=\"true\" (click)=\"ayuda()\"> -->\n      <ion-icon *ngIf=\"idCurso == null\" name=\"alert-circle-outline\" class=\"icon-avatar\" button=\"true\" (click)=\"ayudaCursos()\"></ion-icon>\n      <img *ngIf=\"idCurso != null && imagen == 0\" src=\"../assets/imgs/icon.png\">\n      <img *ngIf=\"idCurso != null && imagen == 1\" src=\"https://aulavirtualctp.com/Academias/Cursos/imgCurso.ashx?ID={{idCurso}}\">\n    </ion-avatar>\n    <h5 *ngIf=\"idCurso == null\">Selecciona un curso...</h5>\n    <h5 *ngIf=\"idCurso != null\">{{nombreCurso | uppercase}}</h5>\n    <!-- <p>{{nombreCurso}}</p> -->\n    <!-- <p>{{oposicion | uppercase}}</p> -->    \n    <!-- <section>\n      <ion-button *ngIf=\"cursos != null && cursos.length > 1\" shape=\"round\" size=\"small\" (click)=\"verCursos()\"><ion-icon slot=\"icon-only\" name=\"school\"></ion-icon>Seleccionar curso</ion-button>\n    </section> -->\n    <section>\n    <!-- <ion-button class=\"ion-text-wrap\" expand=\"full\" (click)=\"verCursos()\">        \n        {{nombreCurso}}\n    </ion-button> -->\n    <ion-button class=\"ion-text-wrap\" expand=\"full\" (click)=\"miCuenta()\">   \n      <!-- <ion-icon slot=\"icon-only\" name=\"school\"></ion-icon>&nbsp; -->\n      <!-- MIS CURSOS -->\n      <ion-icon slot=\"icon-only\" name=\"person-circle-outline\"></ion-icon>&nbsp;\n      {{nick | uppercase}}\n    </ion-button>\n  </section>\n  <ion-searchbar (ionInput)=\"getCursos($event)\" placeholder=\"Buscar curso\"></ion-searchbar>\n  <ion-list *ngIf=\"cursos != null && cursos.length > 0\" class=\"ion-list-cursos\">\n    <ion-item *ngFor=\"let curso of cursos; let isOdd = odd; let i = index\" [class.odd]=\"isOdd\" button=\"true\" (click)=\"cargarCurso(curso)\" [ngClass]=\"curso.IdCurso == idCurso ? 'curso-activo' : '' \">\n      <ion-avatar slot=\"start\" >\n        <img *ngIf=\"curso.Imagen == 0\" src=\"../assets/imgs/icon.png\">\n        <img *ngIf=\"curso.Imagen == 1\" src=\"https://aulavirtualctp.com/Academias/Cursos/imgCurso.ashx?ID={{curso.IdCurso}}\">\n      </ion-avatar>\n      <ion-label class=\"ion-text-wrap\">{{curso.Nombre}}</ion-label>\n    </ion-item>\n  </ion-list>\n  <section class=\"ion-padding ion-text-center\" *ngIf=\"cursos != null && cursos.length < 1\">\n    <!-- <ion-label>No estás matriculado en ningún curso</ion-label> -->\n    <img width=\"200\" src=\"../assets/imgs/empty.png\" (click)=\"sinCursos()\">\n  </section>\n    \n    <!-- <ion-item>\n        <ion-icon name=\"md-unlock\" item-start></ion-icon>\n        Acceso\n        <ion-badge item-end>{{mesAcceso}}</ion-badge>\n    </ion-item> -->\n\n    <!-- <ion-item>\n        <ion-icon name=\"checkbox-outline\"></ion-icon>\n        Test Realizados\n        <ion-badge slot=\"end\">{{resultados}}</ion-badge>\n    </ion-item>\n    <ion-item>\n        <ion-icon name=\"calendar-outline\"></ion-icon>\n        Test Realizados esta semana\n        <ion-badge slot=\"end\">{{semanal}}</ion-badge>\n    </ion-item>\n    <ion-item>\n        <ion-icon name=\"thumbs-up-outline\"></ion-icon>\n        Test Aprobados\n        <ion-badge slot=\"end\">{{aprobados}}%</ion-badge>\n    </ion-item>\n    <ion-item>\n        <ion-icon name=\"ribbon-outline\"></ion-icon>\n        Nota Media\n        <ion-badge slot=\"end\">{{media}}</ion-badge>\n    </ion-item> -->\n\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Storage } from '@ionic/storage-angular';\n\nconst THEME_KEY = \"selected-app-theme\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  darkMode = false;\n\n  constructor(private plt: Platform, private storage: Storage) { \n    this.plt.ready().then(() => {\n\n      this.storage.get(THEME_KEY).then(theme => {\n        this.setAppTheme(theme);\n      });\n\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');\n      \n      // deprecated\n      // prefersDark.addListener(e => {\n      //   this.setAppTheme(e.matches);\n      // });\n\n      prefersDark.addEventListener('change', e => {\n        this.setAppTheme(e.matches);\n      });\n\n    })\n  }\n\n  toggleAppTheme() {\n    this.darkMode = !this.darkMode;\n    this.setAppTheme(this.darkMode);\n  }\n\n  setAppTheme(dark){\n    this.darkMode = dark;\n\n    if (this.darkMode){\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n    }\n\n    this.storage.set(THEME_KEY, this.darkMode);\n  }\n}\n"],"names":["DecimalPipe","AppConfig","i0","HomePage","constructor","router","navParamService","proveedor","proveedorLogout","events","alertCtrl","loadingCtrl","actionSheetCtrl","storage","device","decimalPipe","ga","callNumber","themeService","startTrackerWithId","googleAnalytics","then","trackView","catch","e","console","log","get","val","undefined","usuario","JSON","parse","inicializarPerfil","logout","ngOnInit","ionViewWillEnter","theme","darkMode","ionViewDidLoad","ayudaMenu","alert","create","header","subHeader","buttons","present","nick","Mensaje","Nick","nombre","Nombre","oposicion","NombreOposicion","nombreAcademia","NombreAcademia","obtenerCursos","consultarCursos","AuthorizationToken","subscribe","data","parseCursoJson","error","Error","cursos","allCursos","jsonArray","i","length","jsonObject","push","getCursos","ev","searchQuery","target","value","trim","filter","curso","toLowerCase","indexOf","obtenerPosicionCurso","idCurso","IdCurso","posicion","verCursos","radio_options","type","label","checked","inputs","text","handler","cargarCurso","seleccionarCurso","loading","message","duration","idOposicion","IdOposicion","nombreCurso","tipoCurso","Tipo","imagen","Imagen","mesAcceso","MesAcceso","accesoModulos","Modulos","accesoTest","Test","accesoDocs","Documentos","accesoVideos","Videos","accesoClases","Clases","accesoForo","Foro","accesoEventos","Eventos","accesoNotificaciones","Notificaciones","accesoOrtografia","Ortografia","accesoIngles","Ingles","accesoSimulacros","Simulacros","accesoPersonalidad","Personalidad","accesoPsicotecnicos","Psicotecnicos","accesoCasosPracticos","CasosPracticos","accesoLegislacion","Legislacion","accesoNivelPro","NivelPRO","set","publish","configuracion","navigate","salir","confirm","ayudaCursos","sinCursos","miCuenta","actionSheet","cssClass","icon","role","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}