{"version":3,"file":"src_app_pages_test_test_module_ts.js","mappings":"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","sources":["./src/app/pages/test/test-routing.module.ts","./src/app/pages/test/test.module.ts","./src/app/pages/test/test.page.ts","./src/app/pages/test/test.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestPage } from './test.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { TestPageRoutingModule } from './test-routing.module';\n\nimport { TestPage } from './test.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ScrollingModule,\n    TestPageRoutingModule\n  ],\n  declarations: [TestPage]\n})\nexport class TestPageModule {}\n","import { Component, OnInit} from '@angular/core';\nimport { AlertController, LoadingController, ActionSheetController } from '@ionic/angular';\nimport { Router, NavigationStart } from '@angular/router';\nimport { NavparamService } from 'src/app/services/navparam.service';\nimport { AulavirtualrestProvider } from '../../providers/aulavirtualrest';\nimport { LogoutProvider } from '../../providers/logout';\nimport { Storage } from '@ionic/storage-angular';\nimport { DecimalPipe, DatePipe } from '@angular/common';\nimport { filter } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.page.html',\n  styleUrls: ['./test.page.scss'],\n})\nexport class TestPage implements OnInit {\n\n  idCurso: number;\n  idOposicion: number;\n  tipoCurso: number;\n  mesAcceso: number;\n  accesoTest: number;\n  usuario: any = [];  \n  listaTest: any[];\n  listaTestTemp: any[];\n  listaResultados: any[];\n  searchQuery: string = '';\n  searchQuerySimulacros: string = '';\n  all: string = \"all\";\n  done: string = \"done\";\n  undone: string = \"undone\";\n  paused: string = \"paused\";\n  numMinutos: number = 0;\n  numPreguntas: number = 0;\n  continuar: number = 0;\n\n  test: any;\n  tipoTest: number;\n  listaPreguntas: any[];\n  listaRespuestas: any[];\n  numeroPreguntas: any;\n  aciertos: number;\n  fallos: number;\n  blancos: number;\n  dudosas: number;\n  dudosasAcierto: number;\n  dudosasFallo: number;\n  nota: number;\n  notaRiesgo: number;\n\n  reload: boolean = true;\n  simulacros: boolean = false;\n\n  isAscendic: boolean = true;\n  isRecent: boolean = true;\n  currentDate = new Date();\n  lastMonthDate = new Date(new Date().setMonth(new Date().getMonth() - 1));\n\n\n  constructor(private router: Router, private navParamService: NavparamService, public proveedor: AulavirtualrestProvider, public proveedorLogout: LogoutProvider, public alertCtrl: AlertController, public loadingCtrl: LoadingController, public actionSheetCtrl: ActionSheetController, private storage: Storage, private decimalPipe: DecimalPipe,  private datePipe: DatePipe) { \n\n    this.simulacros = this.navParamService.getNavData() == 'Simulacros';\n\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationStart)\n    ).subscribe((route: NavigationStart) => {\n        //console.log('Route: '+route.url)\n        if (route.url == '/tabs/test') {\n          this.simulacros = false;\n          this.initialize();\n          this.reload = false;\n        }\n    })\n\n  }\n\n  ngOnInit() {\n    //console.log('ngOnInit');\n    // this.initialize();\n    // this.mostrarMenu();    \n  }\n\n  ionViewWillEnter() {    \n    if (this.reload) {\n      this.initialize();\n    }\n    //this.mostrarMenu();\n  }\n\n  // mostrarMenu(){\n  //   let tabs = document.querySelectorAll('.tabbar');\n  //   if ( tabs !== null ) {\n  //     Object.keys(tabs).map((key) => {\n  //       tabs[ key ].style.transform = 'translateY(0)';\n  //     });\n  //   } // end if\n  // }\n\n  // ocultarMenu(){\n  //   let tabs = document.querySelectorAll('.tabbar');\n  //   if ( tabs !== null ) {\n  //     Object.keys(tabs).map((key) => {\n  //       tabs[ key ].style.transform = 'translateY(56px)';\n  //     });\n  //   } // end if\n  // }\n\n  initialize() {\n\n    // Se cargan los test\n    this.initializeTest();\n\n    // Se obtiene el id de la oposición del curso de la memoria\n    this.storage.get('idOposicion').then((val) => {\n      if (val != null && val != undefined){\n        this.idOposicion = val;\n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        this.proveedorLogout.logout()\n      }\n    });\n  }\n\n  async initializeTest() {\n\n    const loading = await this.loadingCtrl.create({\n      message: \"Cargando...\"\n    });\n    await loading.present();\n\n    // Se obtiene el id del curso de la memoria\n    this.storage.get('idCurso').then((val) => {\n      if (val != null && val != undefined){\n        this.idCurso = val;       \n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        loading.dismiss();\n        this.proveedorLogout.logout();\n      }\n    });\n\n    // Se obtiene el mes de acceso al curso de la memoria\n    this.storage.get('mesAcceso').then((val) => {\n      if (val != null && val != undefined){\n        this.mesAcceso = val;       \n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        loading.dismiss();\n        this.proveedorLogout.logout();\n      }\n    });\n\n    // Se obtienen los datos del usuario de la memoria\n    this.storage.get('usuario').then((val) => {\n      if (val != null && val != undefined){\n        this.usuario = JSON.parse(val);\n\n        // Se consultan todos los test del curso\n        //this.proveedor.consultarTestCurso(this.usuario.Mensaje.AuthorizationToken, this.idCurso)\n        //console.log('curso: ' + this.idCurso);\n        //console.log('mes: ' + this.mesAcceso);\n\n        if (this.simulacros) {\n          this.proveedor.consultarSimulacrosCursoMes(this.usuario.Mensaje.AuthorizationToken, this.idCurso, this.mesAcceso)\n          .subscribe(\n            (data)=>{this.parseListaTestJson(data);},\n            (error)=>{console.log(error);},\n            () =>{loading.dismiss()}\n          )\n        }\n        else {\n          this.proveedor.consultarTestCursoMes(this.usuario.Mensaje.AuthorizationToken, this.idCurso, this.mesAcceso)\n          .subscribe(\n            (data)=>{this.parseListaTestJson(data);},\n            (error)=>{console.log(error);},\n            () =>{loading.dismiss()}\n          )\n        }\n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        loading.dismiss();\n        this.proveedorLogout.logout()\n      }\n    });\n  }\n\n\n  parseListaTestJson(data)\n  {\n    if (data.Error == 0){\n      let jsonArray = data.Mensaje;\n\n      this.listaTest = [];\n      this.listaTestTemp = [];\n\n      for(let i=0; i < jsonArray.length; i++)\n      {\n        let jsonObject = jsonArray[i];\n        this.listaTest.push(jsonObject);\n        this.listaTestTemp.push(jsonObject);\n      }\n\n      // // Se filtra por los no realizados\n      // this.listaTest = this.listaTestTemp;\n      //       this.listaTest = this.listaTest.filter((test) => {\n      //         return ((test.Pendiente == 0 && test.Realizado == 0));\n      //       })\n    }\n    // Acceso denegado\n    else if (data.Error == -10){\n      this.proveedorLogout.logout()\n    }\n    else{\n      this.listaTest = [];\n      //this.alert('Sin Test', 'Este curso no contiene test de teoría');\n    }\n  }\n\n  getTest(ev: any) {\n\n    if (this.listaTestTemp != null && this.listaTestTemp != undefined){\n      // Reset items back to all of the items\n      this.listaTest = this.listaTestTemp;\n\n      this.searchQuery = '';\n\n      // set val to the value of the searchbar\n      const val = ev.target.value;\n\n      // if the value is an empty string don't filter the items\n      if (val && val.trim() != '') {\n        this.searchQuery = val;\n        this.listaTest = this.listaTest.filter((item) => {\n          return ((item.Nombre.toLowerCase().indexOf(val.toLowerCase()) > -1) || (item.IdTema == val));\n        })\n      }\n    }\n  }\n\n  initializeResultados() {\n\n  // const loader = this.loadingCtrl.create({\n  //   content: \"Cargando...\",\n  //   duration: 500\n  // });\n  // loader.present();\n\n  // Se obtiene el id del curso de la memoria\n  this.storage.get('idCurso').then((val) => {\n    if (val != null && val != undefined){\n      this.idCurso = val;       \n    }\n    else{\n      // Si no se han recuperado los datos se vuelve a la página de login\n      this.proveedorLogout.logout()\n    }\n  });\n\n  // Se obtienen los datos del usuario de la memoria\n  this.storage.get('usuario').then((val) => {\n      if (val != null && val != undefined){\n        this.usuario = JSON.parse(val);\n        // Se consultan los resultados del alumno\n        this.proveedor.consultarResultadosCurso(this.usuario.Mensaje.AuthorizationToken, this.idCurso)\n        .subscribe(\n          (data)=>{this.parseResultadosJson(data);},\n          (error)=>{console.log(error);}\n        )\n      }\n      // else{\n      //   // Si no se han recuperado los datos se vuelve a la página de login\n      //   this.logout();\n      // }\n    });\n  }\n\n  parseResultadosJson(data)\n    {\n    let jsonArray = data.Mensaje;\n\n    this.listaResultados = [];\n\n    for(let i=0; i < jsonArray.length; i++)\n    {\n      let jsonObject = jsonArray[i];\n      this.listaResultados.push(jsonObject);\n    }\n  }\n\n  hacerTest(item) {\n\n    // console.log(item);\n    // console.log(this.idOposicion);\n    // console.log('idTest: ' + item.IdTest);\n    // console.log('idOposicion: ' + this.idOposicion);\n\n    // Si el test estaba en PAUSA\n    if (item.Pendiente > 0)\n    {\n        // Se continúa\n        this.continuar = 1;\n        //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null});\n        if (this.simulacros)\n          this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null, etiqueta: 'Simulacros', revisar: false}));\n        else\n          this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null, etiqueta: null, revisar: false}));\n        \n        this.router.navigate(['/test-do']);\n    }\n    else\n    {\n      // Si es la primera vez que va a hacer el test\n      if (item.Realizado == 0)\n      {\n        // Se inicializa el tiempo a cero\n        this.continuar = 0;   \n        this.numMinutos = 0;\n        this.numPreguntas = 0; \n        //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null});\n        if (this.simulacros)\n          this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null, etiqueta: 'Simulacros', revisar: false}));\n        else\n          this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null, etiqueta: null, revisar: false}));\n        \n        this.router.navigate(['/test-do']);\n      }\n      // Si ya ha realizado el test\n      else\n      {\n          // Se muestran las opciones\n          this.mostrarOpciones(item);\n      }\n\n    }\n\n  }\n\n  async mostrarOpciones(item) {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: '¿Qué quieres hacer?',\n      buttons: [\n        {\n          text: 'Revisar',\n          icon: 'eye-outline',\n          handler: () => {\n\n            //console.log(item.IdTest, this.idOposicion);\n\n            // Se recupera el test\n            this.proveedor.recuperarTest(this.usuario.Mensaje.AuthorizationToken, item.IdTest, this.idOposicion)\n            .subscribe(\n              (data)=>{this.parseTestJson(data, item.Nombre, item.Media);},\n              (error)=>{console.log(error);},\n              () =>{\n                }\n            )\n          }\n        },\n        {\n          text: 'Repetir',\n          icon: 'repeat-outline',\n          handler: () => {\n\n            // Si hay limite de ejecuciones se valida que no se haya superado\n            if (item.Limite > 0 && item.Realizado >= item.Limite)\n            {              \n              this.alert('Límite superado', 'Has superado el número de veces que el centro permite realizar este test');\n            }\n            else{\n              // Se inicializa el tiempo\n              this.continuar = 0;\n              this.numMinutos = 0;\n              this.numPreguntas = 0;\n              //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null});\n              this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, continuar: this.continuar, origen: null, etiqueta: null, revisar: false}));\n              this.router.navigate(['/test-do']);              \n            }\n          }\n        },        \n        // {\n        //   text: 'Configurar',\n        //   icon: 'options-outline',\n        //   handler: () => {\n\n        //     this.alert('PRÓXIMAMENTE', 'Muy pronto podrás configurar los test también desde la app');\n\n        //   }\n        // },\n        {\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n          }\n        }\n      ]\n    });\n    actionSheet.present();\n  }\n\n  parseTestJson(data, nombre, mediaAlumnos)\n  {\n    if (data.Error == 0){\n\n      // Test\n      this.test = data;\n      this.tipoTest = data.Mensaje.Tipo;\n      this.test.Nombre = nombre;\n\n      // Preguntas\n      let jsonArray = data.Mensaje.Preguntas;\n\n      this.listaPreguntas = [];\n      this.listaRespuestas = [];\n      this.aciertos = 0;\n      this.fallos = 0;\n      this.blancos = 0;\n      this.dudosas = 0;\n      this.dudosasAcierto = 0;\n      this.dudosasFallo = 0\n\n      for(let i=0; i < jsonArray.length; i++)\n      {\n        let jsonObject = jsonArray[i];\n        //jsonObject.IdPregunta = i+1;\n        this.listaPreguntas.push(jsonObject);\n\n        if (jsonObject.Contestada == 0)\n          this.blancos++;\n        else\n        {\n          if (jsonObject.Acertada == 1)\n          {\n            if (jsonObject.Dudosa == 1)\n            {\n              this.dudosasAcierto++;\n              this.blancos++;\n            }\n            else\n              this.aciertos++;\n          }\n\n          if (jsonObject.Fallada == 1)\n          {\n            if (jsonObject.Dudosa == 1)\n            {\n              this.dudosasFallo++;\n              this.blancos++\n            }\n            else\n              this.fallos++;\n          }\n        }\n\n        if (jsonObject.Dudosa == 1)\n        {\n          this.dudosas++;\n        }\n\n      }\n\n      this.numeroPreguntas = this.listaPreguntas.length;\n\n      // Se calcula la nota\n      var res_aciertos = this.aciertos;\n      var res_fallos = this.fallos * data.Mensaje.ValorFallo;\n      var res_maximo = this.aciertos + this.fallos + this.blancos;\n      var res_obtenido = res_aciertos - res_fallos;\n\n      if (res_maximo > 0)\n          res_obtenido = (100 * res_obtenido) / res_maximo;\n      else\n          res_obtenido = 0;\n\n      if (res_obtenido < 0)\n          res_obtenido = 0;\n\n      this.nota = res_obtenido;\n\n      // Se calcula la nota con riesgo\n      if (this.dudosas > 0)\n      {\n        var res_aciertos = this.aciertos + this.dudosasAcierto;\n        var res_fallos = (this.fallos + this.dudosasFallo) * data.Mensaje.ValorFallo;\n        var res_maximo = this.aciertos + this.fallos + this.blancos;\n        var res_obtenido = res_aciertos - res_fallos;\n\n        if (res_maximo > 0)\n            res_obtenido = (100 * res_obtenido) / res_maximo; //Math.Round((decimal)((100 * res_obtenido) / res_maximo), 2);\n        else\n            res_obtenido = 0;\n\n        if (res_obtenido < 0)\n            res_obtenido = 0;\n\n        this.notaRiesgo = res_obtenido;\n      }\n      \n      // Se envía al usuario a la página de revisión\n      //this.navCtrl.push(TestReviewPage, {test: this.test, preguntas: this.listaPreguntas, respuestas: this.listaRespuestas, aciertos: this.aciertos, fallos: this.fallos, blancos: this.blancos, nota: nota, mediaAlumnos: mediaAlumnos, origen: null });\n      //this.navParamService.setNavData(item);\n      //this.router.navigate(['/test-review'], {test: this.test, preguntas: this.listaPreguntas, respuestas: this.listaRespuestas, aciertos: this.aciertos, fallos: this.fallos, blancos: this.blancos, nota: nota, mediaAlumnos: mediaAlumnos, origen: null });\n\n      //this.navParamService.setNavData(JSON.stringify({test: this.test, listaPreguntas: this.listaPreguntas, listaRespuestas: this.listaRespuestas, aciertos: this.aciertos, fallos: this.fallos, blancos: this.blancos, nota: this.decimalPipe.transform(nota/10, '1.2-2'), mediaAlumnos: this.decimalPipe.transform(mediaAlumnos/10, '1.2-2'), origen: this.test}));\n      this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, test: this.test, tipoTest: this.tipoTest, valorFallo: data.Mensaje.ValorFallo, listaPreguntas: this.listaPreguntas, listaRespuestas: this.listaRespuestas, aciertos: this.aciertos, fallos: this.fallos, blancos: this.blancos, dudosas: this.dudosas, dudosasAcierto: this.dudosasAcierto, dudosasFallo: this.dudosasFallo, nota: this.decimalPipe.transform(this.nota/10, '1.2-2'), notaRiesgo: this.decimalPipe.transform(this.notaRiesgo/10, '1.2-2'), mediaAlumnos: mediaAlumnos, origen: null, etiqueta: null, revisar: true}));      \n      this.router.navigate(['/test-review']);\n    }\n    // Acceso denegado\n    else if (data.Error == -10){\n      this.proveedorLogout.logout()\n    }\n    else{      \n      this.alert('Ooops!', 'La revisión de este test sólo está disponible en la plataforma web.');\n    }    \n  }\n\n  async configurarTest(item) {\n\n    // Se obtiene el id del curso de la memoria\n    this.storage.get('idOposicion').then((val) => {\n      if (val != null && val != undefined){\n        this.idOposicion = val;              \n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        this.proveedorLogout.logout()\n      }\n    });\n\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Selecciona la configuración del test:',\n      buttons: [\n        {\n          text: 'Original',\n          icon: 'checkbox-outline',\n          handler: () => {\n            this.numMinutos = 0;\n            this.numPreguntas = 0;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, origen: null});\n            this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas, origen: null, etiqueta: null, revisar: false}));\n            this.router.navigate(['/test-do']);\n          }\n        },\n        // {\n        //   text: 'Aleatorio',\n        //   icon: !this.platform.is('ios') ? 'shuffle' : null,\n        //   handler: () => {\n        //     this.navCtrl.push(DoTestPage, {item: item});\n        //   }\n        // },\n        {\n          text: 'Configurar tiempo',\n          icon: 'time-outline',\n          handler: () => {\n            this.configurarTiempo(item);\n          }\n        },{\n          text: 'Configurar nº de preguntas',\n          icon: 'list-outline',\n          handler: () => {\n            this.configurarNumeroPreguntas(item);\n          }\n        },{\n          text: 'Cancelar',\n          role: 'cancel',\n          icon: 'close',\n          handler: () => {\n            this.numMinutos = 0;\n            this.numPreguntas = 0;\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  async configurarTiempo(item) {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Seleccionar la duración del test:',\n      buttons: [\n        {\n          text: '20 minutos',\n          icon: 'time-outline',\n          handler: () => {\n            this.numMinutos = 20;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '30 minutos',\n          icon: 'time-outline',\n          handler: () => {\n            this.numMinutos = 30;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '45 minutos',\n          icon: 'time-outline',\n          handler: () => {\n            this.numMinutos = 45;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '60 minutos',\n          icon: 'time-outline',\n          handler: () => {\n            this.numMinutos = 60;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '90 minutos',\n          icon: 'time-outline',\n          handler: () => {\n            this.numMinutos = 90;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: 'Cancelar',\n          role: 'cancel',\n          icon: 'close',\n          handler: () => {\n            this.configurarTest(item);\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  async configurarNumeroPreguntas(item) {\n\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Selecciona el nº de preguntas del test:',\n      buttons: [\n        {\n          text: '10 preguntas',\n          icon: 'list',\n          handler: () => {\n            this.numPreguntas = 10;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '25 preguntas',\n          icon: 'list',\n          handler: () => {\n            this.numPreguntas = 25;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '50 preguntas',\n          icon: 'list',\n          handler: () => {\n            this.numPreguntas = 50;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '75 preguntas',\n          icon: 'list',\n          handler: () => {\n            this.numPreguntas = 75;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: '100 preguntas',\n          icon: 'list',\n          handler: () => {\n            this.numPreguntas = 100;\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n            this.navParamService.setNavData(item);\n            this.router.navigate(['/test-do']);\n          }\n        },{\n          text: 'Cancelar',\n          role: 'cancel',\n          icon: 'close',\n          handler: () => {\n            this.configurarTest(item);\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  async filtro()\n  {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Filtrar por:',\n      buttons: [\n        {\n          text: 'Todos',\n          handler: () => {\n            this.listaTest = this.listaTestTemp;\n          }\n        },\n        {\n          text: 'Realizados',\n          icon: 'checkbox-outline',\n          handler: () => {\n            this.listaTest = this.listaTestTemp;\n            this.listaTest = this.listaTest.filter((test) => {\n              return ((test.Pendiente == 0 && test.Realizado == 1));\n            })\n          }\n        },{\n          text: 'No Realizados',\n          icon: 'square-outline',\n          handler: () => {\n            this.listaTest = this.listaTestTemp;\n            this.listaTest = this.listaTest.filter((test) => {\n              return ((test.Pendiente == 0 && test.Realizado == 0));\n            })\n          }\n        },{\n          text: 'En Pausa',\n          icon: 'pause-outline',\n          handler: () => {\n            this.listaTest = this.listaTestTemp;\n            this.listaTest = this.listaTest.filter((test) => {\n              return ((test.Pendiente > 0));\n            })\n          }\n        },{\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  async ordenar()\n  {\n    const actionSheet = await this.actionSheetCtrl.create({\n      header: 'Ordenar por:',\n      buttons: [\n        {\n          text: 'Título',\n          icon: 'text',\n          handler: () => {\n            this.isAscendic?this.ordenarTituloASC():this.ordenarTituloDESC();\n          }\n        },\n        {\n          text: 'Tema',\n          icon: 'book-outline',\n          handler: () => {\n            this.isAscendic?this.ordenarTemaASC():this.ordenarTemaDESC();\n          }\n        },\n        // {\n        //   text: 'Reciente',\n        //   icon: 'time-outline',\n        //   handler: () => {\n        //     this.isRecent?this.ordenarRecienteON():this.ordenarRecienteOFF();            \n        //   }\n        // }\n        {\n          text: 'Fecha',\n          icon: 'calendar-outline',\n          handler: () => {\n            this.isAscendic?this.ordenarFechaASC():this.ordenarFechaDESC();\n          }\n        }\n        ,{\n          text: 'Cancelar',\n          icon: 'close',\n          role: 'cancel',\n          handler: () => {\n          }\n        }\n      ]\n    });\n    await actionSheet.present();\n  }\n\n  ordenarTituloASC(){\n    this.isAscendic = false;\n    this.listaTest = this.listaTest.sort((a,b) => {\n        if (a.Nombre < b.Nombre) {\n            return 1;\n        }\n        if (a.Nombre > b.Nombre) {\n            return -1;\n        }\n        return 0;\n    });\n  }\n\n  ordenarTituloDESC(){\n    this.isAscendic = true;\n    this.listaTest = this.listaTest.sort((a,b) => {\n        if (a.Nombre > b.Nombre) {\n            return 1;\n        }\n        if (a.Nombre < b.Nombre) {\n            return -1;\n        }\n        return 0;\n    });\n  }\n\n  ordenarTemaASC(){\n    this.isAscendic = false;\n    this.listaTest = this.listaTest.sort((a,b) => {\n        if (a.IdTema < b.IdTema) {\n            return 1;\n        }\n        if (a.IdTema > b.IdTema) {\n            return -1;\n        }\n        return 0;\n    });\n  }\n\n  ordenarTemaDESC(){\n    this.isAscendic = true;\n    this.listaTest = this.listaTest.sort((a,b) => {\n        if (a.IdTema > b.IdTema) {\n            return 1;\n        }\n        if (a.IdTema < b.IdTema) {\n            return -1;\n        }\n        return 0;\n    });\n  }\n\n  ordenarFechaASC(){\n    this.isAscendic = false;\n    this.listaTest = this.listaTest.sort((a,b) => {\n        if (this.esMayor(a.FechaPublicacion, b.FechaPublicacion) === false) {\n            return 1;\n        }\n        if (this.esMayor(a.FechaPublicacion, b.FechaPublicacion) === true) {\n            return -1;\n        }\n        return 0;\n    });\n  }\n\n  ordenarFechaDESC(){\n    this.isAscendic = true;\n    this.listaTest = this.listaTest.sort((a,b) => {\n        if (this.esMayor(a.FechaPublicacion, b.FechaPublicacion) === true) {\n            return 1;\n        }\n        if (this.esMayor(a.FechaPublicacion, b.FechaPublicacion) === false) {\n            return -1;\n        }\n        return 0;\n    });\n  }\n\n  ordenarRecienteON(){\n    this.isRecent = false;\n    this.listaTest = this.listaTestTemp;\n    this.listaTest = this.listaTest.filter((test) => {\n      return ((this.esReciente(test.FechaPublicacion) === true));\n    })\n  }\n\n  ordenarRecienteOFF(){\n    this.isRecent = true;\n    this.listaTest = this.listaTestTemp;\n    this.listaTest = this.listaTest.filter((test) => {\n      return ((this.esReciente(test.FechaPublicacion) === false));\n    })\n  }\n\n  esReciente(date: string) {\n    //return dateString1 >= dateString2 // sólo funciona con formato YYYY/MM/DD y MM/DD/YYY\n    var parts1 = date.split('/');\n    var parts2 = this.datePipe.transform(this.lastMonthDate, 'dd/MM/yyyy').split('/');\n\n    var latest = false;\n\n    if (parseInt(parts1[2]) > parseInt(parts2[2])) {\n        latest = true;\n    } else if (parseInt(parts1[2]) == parseInt(parts2[2])) {\n        if (parseInt(parts1[1]) > parseInt(parts2[1])) {\n            latest = true;\n        } else if (parseInt(parts1[1]) == parseInt(parts2[1])) {\n            if (parseInt(parts1[0]) >= parseInt(parts2[0])) {\n                latest = true;\n            } \n        }\n    }\n\n    return latest;\n  }\n\n  esMayor(date1: string, date2: string) {\n    //return dateString1 >= dateString2 // sólo funciona con formato YYYY/MM/DD y MM/DD/YYY\n    var parts1 = date1.split('/');\n    var parts2 = date2.split('/');;\n\n    var latest = false;\n\n    if (parseInt(parts1[2]) > parseInt(parts2[2])) {\n        latest = true;\n    } else if (parseInt(parts1[2]) == parseInt(parts2[2])) {\n        if (parseInt(parts1[1]) > parseInt(parts2[1])) {\n            latest = true;\n        } else if (parseInt(parts1[1]) == parseInt(parts2[1])) {\n            if (parseInt(parts1[0]) >= parseInt(parts2[0])) {\n                latest = true;\n            } \n        }\n    }\n\n    return latest;\n  }\n\n  do(item){\n    //this.navCtrl.push(DoTestPage, {item: item});\n    this.navParamService.setNavData(item);\n    this.router.navigate(['/test-do']);\n  }\n\n  async repeat(item){\n    const confirm = await this.alertCtrl.create({\n      header: 'Repetir Test',\n      message: '¿Deseas volver a hacer este test?',\n      buttons: [\n        {\n          text: 'No',\n          handler: () => {\n            console.log('Disagree clicked');\n          }\n        },\n        {\n          text: 'Si',\n          handler: () => {\n            //console.log('Agree clicked');\n            //this.navCtrl.push(DoTestPage, {idOposicion: this.idOposicion, item: item});\n            this.navParamService.setNavData(JSON.stringify({idOposicion: this.idOposicion, item: item}));\n            this.router.navigate(['/doc-viewer']);\n          }\n        }\n      ]\n    });\n    await confirm.present();    \n  }\n\n  ayuda(){\n    //this.navCtrl.push(FaqPage);\n    this.router.navigate(['/faq']);\n  }\n\n  resultados() {\n    //this.navCtrl.push(StatsPage);\n    this.router.navigate(['/test-score']);\n  }\n\n  segmentChanged(ev: any) {\n    switch(ev.detail.value)\n    {\n      case 'all':\n        this.listaTest = this.listaTestTemp;\n        break;\n      case 'undone':\n        this.listaTest = this.listaTestTemp;\n        this.listaTest = this.listaTest.filter((test) => {\n          return ((test.Pendiente == 0 && test.Realizado == 0));\n        })\n        break;\n      case 'done':\n        this.listaTest = this.listaTestTemp;\n        this.listaTest = this.listaTest.filter((test) => {\n          return ((test.Pendiente == 0 && test.Realizado == 1));\n        })\n        break;\n      case 'paused':\n        this.listaTest = this.listaTestTemp;\n        this.listaTest = this.listaTest.filter((test) => {\n          return ((test.Pendiente > 0));\n        })\n        break;\n    }\n  }\n\n  async alert(cabecera: string, mensaje: string) {\n    const alert = await this.alertCtrl.create({\n      header: cabecera,\n      message: mensaje,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n}\n","<ion-header>\n  <ion-toolbar class=\"ion-text-center\" color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <!-- <ion-button (click)=\"ayuda()\">\n        <ion-icon slot=\"icon-only\" name=\"help-circle-outline\"></ion-icon>\n      </ion-button> -->\n      <ion-back-button text=\"Volver\" *ngIf=\"simulacros === true\"></ion-back-button>\n      <!-- <ion-button (click)=\"resultados()\" *ngIf=\"simulacros === false\">\n        <ion-icon slot=\"icon-only\" name=\"ribbon-outline\"></ion-icon>\n      </ion-button> -->\n    </ion-buttons>\n    <ion-buttons slot=\"primary\">\n      <!-- <ion-button>\n        <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n      </ion-button> -->      \n      <!-- <ion-button (click)=\"ordenar()\">\n        <ion-icon slot=\"icon-only\" name=\"filter-outline\"></ion-icon>\n      </ion-button> -->\n    </ion-buttons>\n\n    <ion-title *ngIf=\"simulacros === false\">Test</ion-title>\n    <ion-title *ngIf=\"simulacros === true\">Simulacros</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [scrollY]=\"false\">\n\n  <cdk-virtual-scroll-viewport itemSize=\"56\" minBufferPx=\"900\" maxBufferPx=\"1350\">\n\n    <ion-segment [(ngModel)]=\"all\" (ionChange)=\"segmentChanged($event)\">\n      <ion-segment-button value=\"all\">        \n        <ion-icon name=\"checkbox-outline\"></ion-icon>\n      </ion-segment-button>\n      <ion-segment-button value=\"undone\">        \n        <ion-icon name=\"square-outline\"></ion-icon>\n      </ion-segment-button>\n      <ion-segment-button value=\"done\">        \n        <ion-icon name=\"checkbox\"></ion-icon>\n      </ion-segment-button>\n      <ion-segment-button value=\"paused\">        \n        <ion-icon name=\"pause-outline\"></ion-icon>\n      </ion-segment-button>\n    </ion-segment>\n\n    <div [ngSwitch]=\"all\">\n      \n      <ion-list>\n\n        <!-- Begin Filtro -->\n        <ion-row>\n          <ion-col>\n            <ion-searchbar (ionInput)=\"getTest($event)\" placeholder=\"Buscar por título, etiqueta o tema\"></ion-searchbar>\n          </ion-col>\n          <ion-col size=\"2\">\n            <ion-button icon-start fill=\"clear\" (click)=\"ordenar()\">\n              <ion-icon slot=\"icon-only\" name=\"filter-outline\"></ion-icon>\n            </ion-button>\n          </ion-col>\n        </ion-row>\n        <!-- End Filtro -->\n        \n        <!-- <button ion-item icon-start *ngFor=\"let test of listaTest; let i = index\" (click)=\"configurarTest(listaTest[i], false)\"> -->\n        <ion-item *cdkVirtualFor=\"let test of listaTest; let isOdd = odd; let i = index\" [class.odd]=\"isOdd\" button=\"true\" (click)=\"hacerTest(listaTest[i])\">          \n          <ion-icon *ngIf=\"listaTest[i].Pendiente == 0\" slot=\"start\" name=\"checkbox\" [ngClass]=\"listaTest[i].Realizado > 0 ? 'test-done' : 'test-undone' \"></ion-icon>\n          <ion-icon *ngIf=\"listaTest[i].Pendiente > 0\" slot=\"start\" name=\"pause\" class=\"test-pending\" ></ion-icon>\n          <ion-label class=\"ion-text-wrap\">            \n            <ion-badge class=\"tema\" [ngClass]=\"listaTest[i].IdTema != '' ? 'visible' : 'hidden' \">Tema {{listaTest[i].IdTema}}</ion-badge>\n            <!-- Begin Etiquetas -->\n            <ng-container *ngFor=\"let etiquetaTest of test.Etiquetas.split('][')\">\n              <ion-badge *ngIf=\"etiquetaTest != ''\" class=\"etiqueta\" color=\"light\">\n                {{etiquetaTest}}\n              </ion-badge>\n            </ng-container>\n            <!-- End Etiquetas -->\n            <br>      \n            <ion-icon color=\"primary\" name=\"information-circle-outline\" *ngIf=\"listaTest[i].Instrucciones != '' && listaTest[i].Instrucciones != ' ' && listaTest[i].Instrucciones != null\"></ion-icon>\n            {{listaTest[i].Nombre}}\n            <section class=\"info\">            \n              <label><b>{{listaTest[i].NumPreg}}</b> preguntas</label>\n              &nbsp;\n              <ion-icon slot=\"start\" name=\"repeat\" [ngClass]=\"listaTest[i].Limite > 0 ? 'visible' : 'hidden' \"></ion-icon><label [ngClass]=\"listaTest[i].Limite > 0 ? 'visible' : 'hidden' \">{{listaTest[i].Realizado}}/{{listaTest[i].Limite}}</label>          \n              &nbsp;\n              <ion-icon *ngIf=\"listaTest[i].Realizado > 0\" slot=\"start\" name=\"person\" [ngClass]=\"listaTest[i].UltimoResultado < 5 ? 'test-fail' : 'test-pass' \"></ion-icon><label *ngIf=\"listaTest[i].Realizado > 0\" [ngClass]=\"listaTest[i].UltimoResultado < 5 ? 'test-fail' : 'test-pass' \">{{listaTest[i].UltimoResultado}} vs </label>          \n              <ion-icon *ngIf=\"listaTest[i].Realizado > 0\" slot=\"start\" name=\"people\" [ngClass]=\"listaTest[i].UltimoResultado < 5 ? 'test-fail' : 'test-pass' \"></ion-icon><label *ngIf=\"listaTest[i].Realizado > 0\" [ngClass]=\"listaTest[i].UltimoResultado < 5 ? 'test-fail' : 'test-pass' \">{{listaTest[i].Media}}</label>\n            </section>\n          </ion-label>\n          <!-- {{listaTest[i].FechaPublicacion}}\n          {{currentDate | date:'dd/MM/yyyy'}}\n          {{lastMonthDate | date:'dd/MM/yyyy'}}\n          {{esReciente(listaTest[i].FechaPublicacion, lastMonthDate | date:'dd/MM/yyyy')}} -->\n          <ion-icon name=\"time-outline\" slot=\"end\" *ngIf=\"esReciente(listaTest[i].FechaPublicacion)\"></ion-icon>\n        </ion-item>\n        <section class=\"ion-padding ion-text-center\" *ngIf=\"listaTest != null && listaTest.length < 1\">\n          <img width=\"200\" src=\"../assets/imgs/empty.png\">\n        </section>\n      </ion-list>\n      \n    </div>\n\n  </cdk-virtual-scroll-viewport>\n\n</ion-content>\n"],"names":["NavigationStart","filter","i0","TestPage","constructor","router","navParamService","proveedor","proveedorLogout","alertCtrl","loadingCtrl","actionSheetCtrl","storage","decimalPipe","datePipe","Date","setMonth","getMonth","simulacros","getNavData","events","pipe","event","subscribe","route","url","initialize","reload","ngOnInit","ionViewWillEnter","initializeTest","get","then","val","undefined","idOposicion","logout","loading","create","message","present","idCurso","dismiss","mesAcceso","usuario","JSON","parse","consultarSimulacrosCursoMes","Mensaje","AuthorizationToken","data","parseListaTestJson","error","console","log","consultarTestCursoMes","Error","jsonArray","listaTest","listaTestTemp","i","length","jsonObject","push","getTest","ev","searchQuery","target","value","trim","item","Nombre","toLowerCase","indexOf","IdTema","initializeResultados","consultarResultadosCurso","parseResultadosJson","listaResultados","hacerTest","Pendiente","continuar","setNavData","stringify","test","numMinutos","numPreguntas","origen","etiqueta","revisar","navigate","Realizado","mostrarOpciones","actionSheet","header","buttons","text","icon","handler","recuperarTest","IdTest","parseTestJson","Media","Limite","alert","role","nombre","mediaAlumnos","tipoTest","Tipo","Preguntas","listaPreguntas","listaRespuestas","aciertos","fallos","blancos","dudosas","dudosasAcierto","dudosasFallo","Contestada","Acertada","Dudosa","Fallada","numeroPreguntas","res_aciertos","res_fallos","ValorFallo","res_maximo","res_obtenido","nota","notaRiesgo","valorFallo","transform","configurarTest","configurarTiempo","configurarNumeroPreguntas","filtro","ordenar","isAscendic","ordenarTituloASC","ordenarTituloDESC","ordenarTemaASC","ordenarTemaDESC","ordenarFechaASC","ordenarFechaDESC","sort","a","b","esMayor","FechaPublicacion","ordenarRecienteON","isRecent","esReciente","ordenarRecienteOFF","date","parts1","split","parts2","lastMonthDate","latest","parseInt","date1","date2","do","repeat","confirm","ayuda","resultados","segmentChanged","detail","cabecera","mensaje","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}