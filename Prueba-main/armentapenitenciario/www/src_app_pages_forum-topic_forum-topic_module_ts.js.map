{"version":3,"file":"src_app_pages_forum-topic_forum-topic_module_ts.js","mappings":"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","sources":["./src/app/pages/forum-topic/forum-topic-routing.module.ts","./src/app/pages/forum-topic/forum-topic.module.ts","./src/app/pages/forum-topic/forum-topic.page.html","./src/app/pages/forum-topic/forum-topic.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForumTopicPage } from './forum-topic.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForumTopicPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForumTopicPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\n\nimport { ForumTopicPageRoutingModule } from './forum-topic-routing.module';\n\nimport { ForumTopicPage } from './forum-topic.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PipesModule,\n    ForumTopicPageRoutingModule\n  ],\n  declarations: [ForumTopicPage]\n})\nexport class ForumTopicPageModule {}\n","<ion-header>\n  <ion-toolbar class=\"ion-text-center\" color=\"primary\">    \n    <ion-buttons slot=\"start\">\n      <ion-back-button text=\"Volver\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>{{tema.Titulo}}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"cards-bg social-cards\">\n  <ion-card>\n    <ion-card-header>\n      <ion-card-subtitle>\n      <ion-row>\n        <ion-col size=\"10\">\n          <ion-icon name=\"time-outline\"></ion-icon> {{tema.Fecha}}\n        </ion-col>\n        <ion-col size=\"2\" class=\"ion-text-right\">          \n          <ion-icon *ngIf=\"tema.Respuestas > 0\" name=\"chatbubbles\"></ion-icon>\n          <ion-icon *ngIf=\"tema.Respuestas == 0\" name=\"chatbubbles-outline\"></ion-icon>\n          {{tema.Respuestas}}\n        </ion-col>\n      </ion-row>\n      </ion-card-subtitle>\n      <ion-card-title>\n        <ion-chip>\n          <ion-avatar>\n            <img src=\"../assets/imgs/icon.png\">\n          </ion-avatar>\n          <!-- <ion-icon name=\"settings-outline\"></ion-icon> -->\n          <ion-label>{{tema.Usuario | uppercase}}</ion-label>\n        </ion-chip>\n        <h2><b>{{tema.Titulo}}</b></h2>\n      </ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <!-- <h3><b>{{tema.Titulo}}</b></h3>\n      <br> -->\n      <section class=\"comentario\" [innerHTML]=\"tema.Comentario | safeHtml\"></section>\n    </ion-card-content>\n  </ion-card>\n\n  <ion-card *ngFor=\"let item of items; let i = index\">\n      <!-- <ion-item>\n        <ion-avatar item-start>\n          <img src=\"../assets/imgs/icon.png\">\n        </ion-avatar>\n        <h2>{{items[i].Usuario}}</h2>\n        <p><ion-icon small name=\"md-time\"></ion-icon> {{items[i].Fecha}}</p>\n      </ion-item> -->\n    \n      <!-- <img src=\"img/advance-card-bttf.png\"> -->\n          \n      <ion-card-header>\n        <ion-card-subtitle>        \n          <ion-icon name=\"time-outline\"></ion-icon> {{items[i].Fecha}}\n        </ion-card-subtitle>\n        <ion-card-title>\n          <!-- {{items[i].Usuario}} -->\n          <ion-chip>\n            <ion-avatar>\n              <img src=\"../assets/imgs/icon.png\">\n            </ion-avatar>\n            <!-- <ion-icon name=\"settings-outline\"></ion-icon> -->\n            <ion-label>{{items[i].Usuario | uppercase}}</ion-label>\n          </ion-chip>\n        </ion-card-title>\n      </ion-card-header>\n\n      <ion-card-content>\n        <!-- <p style=\"white-space: normal !important\">{{items[i].Comentario}}</p> -->\n        <section class=\"comentario\" [innerHTML]=\"items[i].Comentario | safeHtml\"></section>\n      </ion-card-content>      \n\n  </ion-card>  \n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-fab-button *ngIf=\"tema.Estado == false\" (click)=\"nuevoComentario()\"><ion-icon name=\"create-outline\"></ion-icon></ion-fab-button>\n    <ion-fab-button *ngIf=\"tema.Estado == true\" (click)=\"temaCerrado()\" color=\"danger\"><ion-icon name=\"lock-closed\"></ion-icon></ion-fab-button>\n  </ion-fab>\n\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { AlertController, LoadingController, ActionSheetController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { NavparamService } from 'src/app/services/navparam.service';\nimport { AulavirtualrestProvider } from '../../providers/aulavirtualrest';\nimport { LogoutProvider } from '../../providers/logout';\nimport { Storage } from '@ionic/storage-angular';\n\n@Component({\n  selector: 'app-forum-topic',\n  templateUrl: './forum-topic.page.html',\n  styleUrls: ['./forum-topic.page.scss'],\n})\nexport class ForumTopicPage implements OnInit {\n\n  idCurso: number;\n  tema: any;\n  usuario: any = [];\n  items: any[];\n  comentario: string;\n\n  constructor(private router: Router, private navParamService: NavparamService, public proveedor: AulavirtualrestProvider, public proveedorLogout: LogoutProvider, public alertCtrl: AlertController, public loadingCtrl: LoadingController, public actionSheetCtrl: ActionSheetController, private storage: Storage) { \n\n    this.tema = this.navParamService.getNavData();\n    this.initializeItems();\n\n  }\n\n  ngOnInit() {\n    // this.tema = this.navParamService.getNavData();\n    // this.initializeItems();\n  }\n\n  // ionViewWillEnter() {\n  //   this.tema = this.navParamService.getNavData();\n  //   this.initializeItems();\n  // }\n\n  async initializeItems() {\n\n    const loading = await this.loadingCtrl.create({\n      message: \"Cargando...\"\n    });\n    await loading.present();\n\n    // Se obtienen el id del curso de la memoria\n    this.storage.get('idCurso').then((val) => {\n      if (val != null && val != undefined){\n        this.idCurso = val;       \n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        this.proveedorLogout.logout()\n      }\n    });\n\n    // Se obtienen los datos del usuario de la memoria\n    this.storage.get('usuario').then((val) => {\n      if (val != null && val != undefined){\n        this.usuario = JSON.parse(val);\n\n        this.proveedor.obtenerRespuestasTemasForo(this.usuario.Mensaje.AuthorizationToken, this.tema.IdTema)\n        .subscribe(\n          //(data)=>{this.tests = data;},\n          (data)=>{this.parseJson(data);},\n          (error)=>{console.log(error);},\n          () =>{loading.dismiss()}\n        )\n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página del foro\n        //this.navCtrl.push(ForoPage);\n        this.router.navigate(['/forum']);\n      }\n    });\n  }\n\n  parseJson(data)\n  {\n    let jsonArray = data.Mensaje;\n\n    this.items = [];\n\n    for(let i=1; i < jsonArray.length; i++)\n    {\n      let jsonObject = jsonArray[i];\n      this.items.push(jsonObject);\n    }\n  }\n\n  temaCerrado() {\n    // const alert = this.alertCtrl.create({\n    //   title: 'Tema Cerrado',\n    //   subTitle: 'Este tema está cerrado y no se pueden añadir más comentarios',\n    //   buttons: ['OK']\n    // });\n    // alert.present();\n    this.alert('Tema Cerrado', 'Este tema está cerrado y no se pueden añadir más comentarios');\n  }\n\n  async nuevoComentario() {\n    const prompt = await this.alertCtrl.create({\n      header: 'Nuevo Comentario',\n      message: \"Haz un comentario sobre este tema:\",\n      inputs: [\n        {\n          name: 'comentario',\n          placeholder: 'Comentario',\n          max: '1000'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: data => {\n            //console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Enviar',\n          handler: data => {\n            this.comentario = data.comentario;\n            this.insertarComentario();\n          }\n        }\n      ]\n    });\n    await prompt.present();\n  } \n\n  async insertarComentario()\n  {\n    if (this.comentario != \"\"){\n      const loading = await this.loadingCtrl.create({\n        message: \"Añadiendo comentario...\"\n      });\n      await loading.present();\n\n      // Se inserta el nuevo comentario en base de datos\n      this.proveedor.nuevaRespuesta(this.usuario.Mensaje.AuthorizationToken, this.idCurso, this.tema.IdTema, this.comentario)\n      .subscribe(\n        //(data)=>{console.log(data);},\n        (data)=>{this.nuevoComentarioCreado(data);},\n        (error)=>{console.log(error);},\n        () =>{loading.dismiss()}\n      )   \n    }\n    else{\n      // const alert = this.alertCtrl.create({\n      //   title: 'ATENCIÓN',\n      //   subTitle: 'Debes introducir un comentario para poder añadirlo al tema',\n      //   buttons: ['OK']\n      // });\n      // alert.present();\n      this.alert('ATENCIÓN', 'Debes introducir un comentario para poder añadirlo al tema');\n    }       \n  }\n\n  nuevoComentarioCreado(data: any){\n    // const alert = this.alertCtrl.create({\n    //   title: '¡Comentario Añadido!',\n    //   subTitle: data.Mensaje,\n    //   buttons: ['OK']\n    // });\n    // alert.present();\n    this.alert('Comentario Añadido', data.Mensaje);\n\n    this.initializeItems();\n  }\n\n  async alert(cabecera: string, mensaje: string) {\n    const alert = await this.alertCtrl.create({\n      header: cabecera,\n      message: mensaje,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n}\n"],"names":["i0","ForumTopicPage","constructor","router","navParamService","proveedor","proveedorLogout","alertCtrl","loadingCtrl","actionSheetCtrl","storage","tema","getNavData","initializeItems","ngOnInit","loading","create","message","present","get","then","val","undefined","idCurso","logout","usuario","JSON","parse","obtenerRespuestasTemasForo","Mensaje","AuthorizationToken","IdTema","subscribe","data","parseJson","error","console","log","dismiss","navigate","jsonArray","items","i","length","jsonObject","push","temaCerrado","alert","nuevoComentario","prompt","header","inputs","name","placeholder","max","buttons","text","handler","comentario","insertarComentario","nuevaRespuesta","nuevoComentarioCreado","cabecera","mensaje","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}