{"version":3,"file":"src_app_pages_test-score_test-score_module_ts.js","mappings":"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","sources":["./src/app/pages/test-score/test-score-routing.module.ts","./src/app/pages/test-score/test-score.module.ts","./src/app/pages/test-score/test-score.page.html","./src/app/pages/test-score/test-score.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestScorePage } from './test-score.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestScorePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestScorePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n//import { PipesModule } from 'src/app/pipes/pipes.module';\n\nimport { TestScorePageRoutingModule } from './test-score-routing.module';\n\nimport { TestScorePage } from './test-score.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    //PipesModule,\n    TestScorePageRoutingModule\n  ],\n  declarations: [TestScorePage]\n})\nexport class TestScorePageModule {}\n","<ion-header>\n  <ion-toolbar class=\"ion-text-center\" color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button text=\"Volver\"></ion-back-button>\n    </ion-buttons>\n    <ion-title> Mis Resultados </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-list>     \n    <ion-searchbar (ionInput)=\"getItems($event)\" placeholder=\"Buscar por título o tema\"></ion-searchbar>\n    <!-- ************************************************************************************************************************** -->\n    <!-- SE DESACTIVA LA POSIBILIDAD DE VOLVER A HACER UN TEST YA QUE NO SE ESTÁN DISTINGUIENDO TEST DE TEMA DE LOS CASOS PRACTICOS -->\n    <!-- ************************************************************************************************************************** -->\n    <!-- <button ion-item icon-start *ngFor=\"let resultado of listaResultados; let i = index\" (click)=\"repeat(listaResultados[i])\">             \n      <p>\n        <ion-icon small name=\"md-time\"></ion-icon>{{listaResultados[i].Fecha}}\n        &nbsp;\n        <ion-icon small name=\"ios-ribbon\" [ngClass]=\"listaResultados[i].Resultado < 50 ? 'test-fail' : 'test-pass' \"></ion-icon><label [ngClass]=\"listaResultados[i].Resultado < 50 ? 'test-fail' : 'test-pass' \">{{listaResultados[i].Resultado}}/100</label>\n      </p> \n      {{listaResultados[i].Nombre}}\n      <ion-badge item-end>{{listaResultados[i].Tema}}</ion-badge>\n    </button> -->\n    <ion-item *ngFor=\"let resultado of listaResultados; let i = index\">                             \n        <ion-label class=\"ion-text-wrap\">          \n          <ion-badge slot=\"end\" [ngClass]=\"listaResultados[i].Tema != 'Sin tema' ? 'visible' : 'hidden' \">{{listaResultados[i].Tema}}</ion-badge>\n          <br> \n          {{listaResultados[i].Nombre}}\n          <section class=\"info\">\n            <ion-icon slot=\"start\" size=\"small\" name=\"ribbon\" [ngClass]=\"listaResultados[i].Resultado/100 < 5 ? 'test-fail' : 'test-pass' \"></ion-icon><label [ngClass]=\"listaResultados[i].Resultado/100 < 5 ? 'test-fail' : 'test-pass' \"> {{this.decimalPipe.transform(listaResultados[i].Resultado/100, '1.2-2')}}</label>\n            &nbsp;            \n            <ion-icon slot=\"start\" size=\"small\" name=\"calendar-outline\"></ion-icon> {{listaResultados[i].Fecha}}\n          </section>\n        </ion-label>        \n      </ion-item>\n  </ion-list>\n\n</ion-content>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AlertController, LoadingController, PopoverController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { AulavirtualrestProvider } from '../../providers/aulavirtualrest';\nimport { LogoutProvider } from '../../providers/logout';\nimport { Storage } from '@ionic/storage-angular';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-test-score',\n  templateUrl: './test-score.page.html',\n  styleUrls: ['./test-score.page.scss'],\n})\nexport class TestScorePage implements OnInit {\n\n  idCurso: number;\n  usuario: any = []; \n  listaResultados: any[];\n  listaResultadosTemp: any[];\n  numMinutos: number = 0;\n  numPreguntas: number = 0;\n\n  constructor(private router: Router, public proveedor: AulavirtualrestProvider, public proveedorLogout: LogoutProvider, public alertCtrl: AlertController, public loadingCtrl: LoadingController, private storage: Storage, public popoverCtrl: PopoverController, public decimalPipe: DecimalPipe) { \n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.initializeResultados();\n  }\n\n  async initializeResultados() {\n\n    const loading = await this.loadingCtrl.create({\n      message: \"Cargando...\",\n      duration: 500\n    });\n    await loading.present();\n\n    // Se obtienen el id del curso de la memoria\n    this.storage.get('idCurso').then((val) => {\n      if (val != null && val != undefined){\n        this.idCurso = val;       \n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        this.proveedorLogout.logout()\n      }\n    });\n\n    // Se obtienen los datos del usuario de la memoria\n    this.storage.get('usuario').then((val) => {\n      if (val != null && val != undefined){\n        this.usuario = JSON.parse(val);\n        // Se consultan los resultados del alumno\n        this.proveedor.consultarResultadosCurso(this.usuario.Mensaje.AuthorizationToken, this.idCurso)\n        .subscribe(\n          (data)=>{this.parseResultadosJson(data);},\n          (error)=>{console.log(error);},\n          () =>{loading.dismiss()}\n        )\n      }\n      else{\n        // Si no se han recuperado los datos se vuelve a la página de login\n        this.proveedorLogout.logout()\n      }\n    });\n  }\n\n  async parseResultadosJson(data)\n  {\n    // console.log(data);\n\n    if (data.Error == 0){\n      let jsonArray = data.Mensaje;\n\n      this.listaResultados = [];\n      this.listaResultadosTemp = [];\n\n      for(let i=0; i < jsonArray.length; i++)\n      {\n        let jsonObject = jsonArray[i];\n        this.listaResultados.push(jsonObject);\n        this.listaResultadosTemp.push(jsonObject);\n      }\n    }\n    // Acceso denegado\n    else if (data.Error == -10){\n      this.proveedorLogout.logout()\n    }\n    else{\n      this.listaResultados = [];\n      const alert = await this.alertCtrl.create({\n        header: 'Sin Resultados',\n        message: 'Todavía no has realizado ningún test',\n        buttons: ['OK']\n      });\n      await alert.present();\n    }\n  }\n\n  getItems(ev: any) {\n\n    if (this.listaResultadosTemp != null && this.listaResultadosTemp != undefined){\n      // Reset items back to all of the items\n      this.listaResultados = this.listaResultadosTemp;\n\n      // set val to the value of the searchbar\n      const val = ev.target.value;\n\n      // if the value is an empty string don't filter the items\n      if (val && val.trim() != '') {\n        this.listaResultados = this.listaResultados.filter((item) => {\n          return ((item.Nombre.toLowerCase().indexOf(val.toLowerCase()) > -1) || (item.Tema.toLowerCase().indexOf(val.toLowerCase()) > -1));\n        })\n      }\n    }\n  }\n\n  // do(item){\n  //   this.navCtrl.push(DoTestPage, {item: item});\n  // }\n\n  // repeat(item){\n  //   const confirm = this.alertCtrl.create({\n  //     title: 'Repetir Test',\n  //     message: '¿Deseas volver a hacer este test?',\n  //     buttons: [\n  //       {\n  //         text: 'No',\n  //         handler: () => {\n  //           //console.log('Disagree clicked');\n  //         }\n  //       },\n  //       {\n  //         text: 'Si',\n  //         handler: () => {\n  //           this.navCtrl.push(DoTestPage, {test: item, numMinutos: this.numMinutos, numPreguntas: this.numPreguntas});\n  //         }\n  //       }\n  //     ]\n  //   });\n  //   confirm.present();    \n  // }\n  \n  // logout()\n  // {\n  //   // const root = this.app.getRootNav();\n  //   // root.popToRoot();\n  //   this.proveedorLogout.logout()\n  //   this.navCtrl.setRoot(LoginPage);\n  // }\n\n}\n"],"names":["i0","TestScorePage","constructor","router","proveedor","proveedorLogout","alertCtrl","loadingCtrl","storage","popoverCtrl","decimalPipe","ngOnInit","ionViewWillEnter","initializeResultados","loading","create","message","duration","present","get","then","val","undefined","idCurso","logout","usuario","JSON","parse","consultarResultadosCurso","Mensaje","AuthorizationToken","subscribe","data","parseResultadosJson","error","console","log","dismiss","Error","jsonArray","listaResultados","listaResultadosTemp","i","length","jsonObject","push","alert","header","buttons","getItems","ev","target","value","trim","filter","item","Nombre","toLowerCase","indexOf","Tema","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}