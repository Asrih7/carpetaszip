{"version":3,"file":"src_app_pages_account-settings_account-settings_module_ts.js","mappings":"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","sources":["./src/app/pages/account-settings/account-settings-routing.module.ts","./src/app/pages/account-settings/account-settings.module.ts","./src/app/pages/account-settings/account-settings.page.ts","./src/app/pages/account-settings/account-settings.page.html","./src/app/services/theme.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountSettingsPage } from './account-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountSettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountSettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccountSettingsPageRoutingModule } from './account-settings-routing.module';\n\nimport { AccountSettingsPage } from './account-settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountSettingsPageRoutingModule\n  ],\n  declarations: [AccountSettingsPage]\n})\nexport class AccountSettingsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from 'src/app/services/theme.service';\nimport { Storage } from '@ionic/storage-angular';\n\n@Component({\n  selector: 'app-account-settings',\n  templateUrl: './account-settings.page.html',\n  styleUrls: ['./account-settings.page.scss'],\n})\nexport class AccountSettingsPage implements OnInit {\n\n  darkMode = false;\n  isPostBack = false;\n  \n  constructor(private themeService: ThemeService, private storage: Storage) { \n  }\n\n  ngOnInit() {\n    this.storage.get('selected-app-theme').then(theme => {\n      this.darkMode = theme;\n    });\n  }\n\n  ionViewDidEnter(){    \n    this.isPostBack = true;\n  }\n\n  toggleDarkMode() {    \n    if (this.isPostBack)\n      this.themeService.toggleAppTheme();\n  }\n\n  notifications() {\n    \n  }\n\n}\n\n","<ion-header>\n  <ion-toolbar class=\"ion-text-center\" color=\"primary\">\n    <ion-title>Configuraci√≥n</ion-title>\n    <ion-buttons slot=\"start\">\n      <ion-back-button text=\"Volver\"></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <ion-item lines=\"full\">\n      <ion-icon slot=\"start\" name=\"moon\"></ion-icon>\n        <ion-label>\n          Modo Noche\n        </ion-label>\n      <ion-toggle slot=\"end\" (ionChange)=\"toggleDarkMode()\" [checked]=\"darkMode === true\"></ion-toggle>    \n    </ion-item>\n    <!-- <ion-item lines=\"full\">\n      <ion-icon slot=\"start\" name=\"notifications\"></ion-icon>\n        <ion-label>\n          Recibir Notificaciones\n        </ion-label>\n      <ion-toggle slot=\"end\" (ionChange)=\"notifications()\"></ion-toggle>    \n    </ion-item> -->\n  </ion-list>\n</ion-content>\n","import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Storage } from '@ionic/storage-angular';\n\nconst THEME_KEY = \"selected-app-theme\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  darkMode = false;\n\n  constructor(private plt: Platform, private storage: Storage) { \n    this.plt.ready().then(() => {\n\n      this.storage.get(THEME_KEY).then(theme => {\n        this.setAppTheme(theme);\n      });\n\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');\n      \n      // deprecated\n      // prefersDark.addListener(e => {\n      //   this.setAppTheme(e.matches);\n      // });\n\n      prefersDark.addEventListener('change', e => {\n        this.setAppTheme(e.matches);\n      });\n\n    })\n  }\n\n  toggleAppTheme() {\n    this.darkMode = !this.darkMode;\n    this.setAppTheme(this.darkMode);\n  }\n\n  setAppTheme(dark){\n    this.darkMode = dark;\n\n    if (this.darkMode){\n      document.body.classList.add('dark');\n    } else {\n      document.body.classList.remove('dark');\n    }\n\n    this.storage.set(THEME_KEY, this.darkMode);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}