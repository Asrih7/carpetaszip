{"version":3,"file":"src_app_pages_test-review_test-review_module_ts.js","mappings":"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","sources":["./src/app/pages/test-review/test-review-routing.module.ts","./src/app/pages/test-review/test-review.module.ts","./src/app/pages/test-review/test-review.page.ts","./src/app/pages/test-review/test-review.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestReviewPage } from './test-review.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestReviewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestReviewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { PipesModule } from 'src/app/pipes/pipes.module';\nimport { SwiperModule } from 'swiper/angular';\n\nimport { TestReviewPageRoutingModule } from './test-review-routing.module';\n\nimport { TestReviewPage } from './test-review.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PipesModule,\n    SwiperModule,\n    TestReviewPageRoutingModule\n  ],\n  declarations: [TestReviewPage]\n})\nexport class TestReviewPageModule {}\n","import { AfterContentChecked, Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { AlertController, LoadingController, PopoverController } from '@ionic/angular';\nimport { MenuController} from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { NavparamService } from 'src/app/services/navparam.service';\nimport { AulavirtualrestProvider } from '../../providers/aulavirtualrest';\nimport { TestIndexReviewPage } from '../test-index-review/test-index-review.page';\nimport { Storage } from '@ionic/storage-angular';\nimport { SwiperComponent } from 'swiper/angular';\nimport { SwiperOptions } from 'swiper';\nimport SwiperCore, { Virtual, Pagination, Scrollbar, EffectCube } from 'swiper';\nimport {IonicSlides} from '@ionic/angular';\n\n// install Swiper modules https://swiperjs.com/angular#virtual-slides\nSwiperCore.use([Virtual]);\n\n// SwiperCore.use([Pagination, Scrollbar, EffectCube, IonicSlides]);\n@Component({\n  selector: 'app-test-review',\n  templateUrl: './test-review.page.html',\n  styleUrls: ['./test-review.page.scss'],\n  //encapsulation: ViewEncapsulation.None\n})\nexport class TestReviewPage implements AfterContentChecked {\n  \n  @ViewChild('swiper') swiper: SwiperComponent;\n\n  // config: SwiperOptions = {\n  //   pagination: false,\n  //   scrollbar: false,\n  //   //centeredSlides: true,\n  //   //effect: 'cube',\n  // };\n\n  resultado: string = \"resultado\";\n  revision: string = \"revision\";\n  comparativa: string = \"comparativa\";\n  ranking: string = \"ranking\";\n  idOposicion: number;\n  test: any;\n  tipoTest: number;\n  listaPreguntas: any[];\n  listaRespuestas: any[];\n  numeroPreguntas: any;\n  numeroRespuestasCorrectas: number = 0;\n  aciertos: number;\n  fallos: number;\n  blancos: number;\n  dudosas: number;\n  dudosasAcierto: number;\n  dudosasFallo: number;\n  nota: number;\n  notaRiesgo: number;\n  valorFallo: number;\n  mediaAlumnos: number;\n  comentario: string;\n  motivo: string;\n  usuario: any = [];\n  origen: any[];\n  etiqueta: string;\n  revisar: boolean;\n  navParams: any;\n\n  constructor(private router: Router, private navParamService: NavparamService, public proveedor: AulavirtualrestProvider, public alertCtrl: AlertController, public loadingCtrl: LoadingController, private storage: Storage, public popoverCtrl: PopoverController, private menu: MenuController) { \n\n    this.navParams = JSON.parse(this.navParamService.getNavData());\n\n    this.idOposicion = this.navParams['idOposicion'];\n    this.test = this.navParams['test'];\n    this.tipoTest = this.navParams['tipoTest'];\n    this.listaPreguntas = this.navParams['listaPreguntas'];\n    this.listaRespuestas = this.navParams['listaRespuestas'];\n    this.numeroPreguntas = this.listaPreguntas.length;\n    this.aciertos = this.navParams['aciertos'];\n    this.fallos = this.navParams['fallos'];\n    this.blancos = this.navParams['blancos'];\n    this.dudosas = this.navParams['dudosas'];\n    this.dudosasAcierto = this.navParams['dudosasAcierto'];\n    this.dudosasFallo = this.navParams['dudosasFallo'];\n    this.nota = this.navParams['nota'] == 10 ? 10 : (this.navParams['nota'] == 0 ? 0 : this.navParams['nota']);\n    this.notaRiesgo = this.navParams['notaRiesgo'] == 10 ? 10 : (this.navParams['notaRiesgo'] == 0 ? 0 : this.navParams['notaRiesgo']);\n    this.valorFallo = this.navParams['valorFallo'];\n    this.mediaAlumnos = this.navParams['mediaAlumnos'] == 10 ? 10 : this.navParams['mediaAlumnos'];\n    this.origen = this.navParams['origen'];\n    this.etiqueta = this.navParams['etiqueta'];\n    this.revisar = this.navParams['revisar'];\n\n  }\n\n  ngAfterContentChecked(): void {\n    // if (this.swiper) {\n    //   this.swiper.updateSwiper({});\n    // }\n  }\n\n  swiperSlideChanged(e) {\n    //console.log('changed: ', e);\n    //this.swiper.updateSwiper;\n  }\n\n  async terminar(){\n    const confirm = await this.alertCtrl.create({\n      header: 'Terminar Revisión',\n      message: '¿Seguro que deseas terminar la revisión?',\n      buttons: [\n        {\n          text: 'No',\n          handler: () => {\n\n          }\n        },\n        {\n          text: 'Si',\n          handler: () => {             \n            if (this.origen != null){\n              //this.navCtrl.push(ModuleDetailPage, {modulo: this.origen});\n              this.navParamService.setNavData(this.origen);\n              this.router.navigate(['/module-detail']);\n            }\n            else if (this.etiqueta != null)\n            {\n              this.navParamService.setNavData(this.etiqueta);\n\n              if (this.etiqueta === 'Simulacros')\n                this.router.navigate(['/test']);\n              else\n                this.router.navigate(['/specific-content']);\n            }\n            else\n            {\n              //this.router.navigate(['/test']);  \n              this.router.navigate(['/tabs/test']);\n\n              // no sirve porque recarga la página y perdemos el menú\n              // this.router.navigate(['/tabs/test'])\n              // .then(() => {\n              //   window.location.reload();\n              // });\n            }        \n          }\n        }\n      ]\n    });\n    await confirm.present();\n  }\n\n  async explicacion(explicacion: string) {\n    const alert = await this.alertCtrl.create({\n      header: 'Explicación',\n      message: explicacion,\n      buttons: ['Entendido']\n    });\n    await alert.present();\n  }\n\n  prev()\n  {\n    this.swiper.swiperRef.slidePrev(500);\n  }\n\n  next()\n  {\n    this.swiper.swiperRef.slideNext(500);\n  }\n\n  goTo(position: number)\n  {\n    this.swiper.swiperRef.slideTo(position, 500);\n  }\n\n  async infoDudosa()\n  {\n    const alert = await this.alertCtrl.create({\n      header: 'Pregunta Dudosa',\n      message: 'Marcaste esta pregunta como dudosa',\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async nuevoComentario(posicion: number, idPregunta: number) {\n\n    const prompt = await this.alertCtrl.create({\n      header: 'Enviar Comentario',\n      message: \"Escribe tu comentario sobre esta pregunta:\",\n      inputs: [\n        {\n          name: 'mensaje',\n          placeholder: 'Mensaje',\n          max: '1000'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: data => {\n            // console.log('Cancel clicked');            \n          }\n        },\n        {\n          text: 'Enviar',\n          handler: data => {\n            this.comentario = data.mensaje;\n            this.insertarComentarioPregunta(posicion, idPregunta);\n          }\n        }\n      ]\n    });\n    await prompt.present();\n  } \n\n  async insertarComentarioPregunta(posicion: number, idPregunta: number)\n  {\n    if (this.comentario != \"\"){\n        const loading = await this.loadingCtrl.create({\n          message: \"Enviando...\",\n          duration: 500\n        });\n        await loading.present();\n\n        // Se obtienen los datos del usuario de la memoria\n        this.storage.get('usuario').then((val) => {\n        if (val != null && val != undefined){\n          this.usuario = JSON.parse(val);\n\n          this.proveedor.comentarPregunta(this.usuario.Mensaje.AuthorizationToken, this.test.IdTest, idPregunta, posicion, this.comentario)\n          .subscribe(\n            //(data)=>{this.tests = data;},\n            (data)=>{this.comentarioEnviado(data);},\n            (error)=>{console.log(error);},\n            () =>{loading.dismiss()}\n          )\n        }\n      }); \n    }\n    else{\n      const alert = await this.alertCtrl.create({\n        header: 'ATENCIÓN',\n        message: 'Debes introducir el mensaje para enviar tu comentario',\n        buttons: ['OK']\n      });\n      await alert.present();\n    }\n\n  }\n\n  async comentarioEnviado(data: any){\n    const alert = await this.alertCtrl.create({\n      header: 'Comentario Enviado',\n      message: data.Mensaje,\n      buttons: ['OK']\n    });\n    await alert.present();\n\n    // console.log(data);\n  }\n\n  async impugnarPregunta(posicion: number, idPregunta: number) {\n    const prompt = await this.alertCtrl.create({\n      header: 'Impugnar pregunta',\n      message: \"Explica el motivo de impugnación de esta pregunta:\",\n      inputs: [\n        {\n          name: 'motivo',\n          placeholder: 'Motivo',\n          max: '1000'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: data => {\n            // console.log('Cancel clicked');            \n          }\n        },\n        {\n          text: 'Impugnar',\n          handler: data => {\n            this.comentario = data.motivo;\n            this.insertarImpugnacionPregunta(posicion, idPregunta);\n          }\n        }\n      ]\n    });\n    prompt.present();\n  } \n\n  async insertarImpugnacionPregunta(posicion: number, idPregunta: number)\n  {\n    if (this.comentario != \"\"){\n        const loading = await this.loadingCtrl.create({\n          message: \"Enviando...\"\n        });\n        await loading.present();\n\n        // Se obtienen los datos del usuario de la memoria\n        this.storage.get('usuario').then((val) => {\n        if (val != null && val != undefined){\n          this.usuario = JSON.parse(val);\n\n          this.proveedor.impugnarPregunta(this.usuario.Mensaje.AuthorizationToken, this.test.IdTest, idPregunta, posicion, this.comentario)\n          .subscribe(\n            //(data)=>{this.tests = data;},\n            (data)=>{this.preguntaImpugnada(data);},\n            (error)=>{console.log(error);},\n            () =>{loading.dismiss()}\n          )\n        }\n        // else{\n        //   // Si no se han recuperado los datos se vuelve a la página del foro\n        //   this.navCtrl.push(ForoPage);\n        // }\n      }); \n    }\n    else{\n      const alert = await this.alertCtrl.create({\n        header: 'ATENCIÓN',\n        message: 'Debes introducir el motivo para enviar tu impugnación',\n        buttons: ['OK']\n      });\n      await alert.present();\n    }\n\n  }\n\n  async preguntaImpugnada(data: any){\n    const alert = await this.alertCtrl.create({\n      header: 'Impugnación Enviada',\n      message: data.Mensaje,\n      buttons: ['OK']\n    });\n    await alert.present();\n\n    // console.log(data);\n  }\n\n  async verIndice(ev: any) {\n\n    const popover = await this.popoverCtrl.create({\n      component: (TestIndexReviewPage),\n      componentProps: {preguntas: this.listaPreguntas, swiper: this.swiper},\n      event: ev,\n      translucent: true\n    });\n    await popover.present();\n        \n  }\n\n  openMenu() {\n    this.menu.enable(true, 'indicePreguntasPreview');\n    this.menu.open('indicePreguntasPreview');\n  }\n\n  closeMenu() {\n    this.menu.close('indicePreguntasPreview');\n  }\n\n}\n","<ion-header>\n  <ion-toolbar class=\"ion-text-center\" color=\"primary\">\n    <!-- <ion-buttons slot=\"start\">\n      <ion-button (click)=\"terminar()\">\n        <ion-icon slot=\"icon-only\" name=\"person-circle-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>     -->\n    <ion-buttons slot=\"start\" *ngIf=\"revisar == true\">\n      <ion-back-button text=\"Volver\"></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"primary\">\n      <!-- <ion-button>\n        <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n      </ion-button> -->\n      <ion-button (click)=\"terminar()\" *ngIf=\"revisar == false\">\n        <ion-icon slot=\"icon-only\" name=\"exit-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title> Revisión </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-menu side=\"start\" menuId=\"indicePreguntasPreview\" contentId=\"indicePreview\">\n  <ion-header>\n    <ion-toolbar color=\"primary\">\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"closeMenu()\">\n          <ion-icon slot=\"icon-only\" name=\"close-outline\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n      <ion-title>Preguntas</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content>\n    <ion-grid>\n      <ion-row>\n        <ion-col *ngFor=\"let pregunta of listaPreguntas; let i = index\">\n          <ion-menu-toggle auto-hide=\"true\">\n            <ion-button size=\"small\" color=\"light\" *ngIf=\"listaPreguntas[i].IdPregunta < 10 && listaPreguntas[i].Contestada == 0\" (click)=\"goTo(i)\">\n              {{'0' + (i+1)}}\n            </ion-button> \n            <ion-button size=\"small\" *ngIf=\"listaPreguntas[i].IdPregunta < 10 && listaPreguntas[i].Contestada > 0\" [ngClass]=\"listaPreguntas[i].Acertada == 1 ? (listaPreguntas[i].Dudosa == 0 ? 'acierto' : 'dudosa-acierto') : listaPreguntas[i].Fallada == 1 ? (listaPreguntas[i].Dudosa == 0 ? 'fallo' : 'dudosa-fallo') : '' \" (click)=\"goTo(i)\">\n              {{'0' + (i+1)}}\n            </ion-button> \n            <ion-button size=\"small\" color=\"light\" *ngIf=\"listaPreguntas[i].IdPregunta > 9 && listaPreguntas[i].Contestada == 0\" (click)=\"goTo(i)\">\n              {{i+1}}\n            </ion-button> \n            <ion-button size=\"small\" *ngIf=\"listaPreguntas[i].IdPregunta > 9 && listaPreguntas[i].Contestada > 0\" [ngClass]=\"listaPreguntas[i].Acertada == 1 ? (listaPreguntas[i].Dudosa == 0 ? 'acierto' : 'dudosa-acierto') : listaPreguntas[i].Fallada == 1 ? (listaPreguntas[i].Dudosa == 0 ? 'fallo' : 'dudosa-fallo') : '' \" (click)=\"goTo(i)\">\n              {{i+1}}\n            </ion-button> \n          </ion-menu-toggle>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-content>\n</ion-menu>\n\n<ion-router-outlet id=\"indicePreview\"></ion-router-outlet>\n\n<ion-content class=\"ion-padding\">\n\n  <ion-segment [(ngModel)]=\"resultado\">\n    <ion-segment-button value=\"resultado\">        \n      <ion-icon name=\"ribbon-outline\"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value=\"revision\">\n      <ion-icon name=\"eye-outline\"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value=\"comparativa\" *ngIf=\"tipoTest != 4\">\n      <ion-icon name=\"people-outline\"></ion-icon>\n    </ion-segment-button>\n    <ion-segment-button value=\"ranking\" *ngIf=\"tipoTest != 4\">\n      <ion-icon name=\"trophy-outline\"></ion-icon>\n    </ion-segment-button>\n  </ion-segment>\n\n  <div [ngSwitch]=\"resultado\">\n    <br>\n    <section *ngSwitchCase=\"'resultado'\" class=\"ion-text-center\">\n      <!-- <p>{{test.Nombre | uppercase}}</p>\n      <p>{{test.Tipo | uppercase}}</p> -->\n      <ion-avatar class=\"test-avatar\">        \n        <img src=\"../assets/imgs/icon.png\">\n      </ion-avatar>\n      <h3>{{test.Nombre | uppercase}}</h3>\n      <section>\n        <ion-badge class=\"nota\" color=\"light\">\n        <ion-label *ngIf=\"dudosas == null\">Nota</ion-label>\n        <ion-label *ngIf=\"dudosas > 0\">Nota Real</ion-label>\n        </ion-badge>\n        <h1 *ngIf=\"tipoTest != 4\" [ngClass]=\"nota >= 5 ? 'aprobado' : 'suspenso'\" >{{nota}}</h1>\n        <ion-badge *ngIf=\"tipoTest != 4\" [ngClass]=\"nota >= 5 ? 'etiqueta-aprobado' : 'etiqueta-suspenso'\">\n          <ion-label *ngIf=\"nota >= 5\">APROBADO</ion-label>\n          <ion-label *ngIf=\"nota < 5\">SUSPENSO</ion-label>\n        </ion-badge>\n        <ion-badge *ngIf=\"tipoTest == 4\" [ngClass]=\"nota > 0 ? 'etiqueta-aprobado' : 'etiqueta-suspenso'\">\n          <ion-label *ngIf=\"nota > 0\">APTO</ion-label>\n          <ion-label *ngIf=\"nota == 0\">NO APTO</ion-label>\n        </ion-badge>\n        <ion-grid>\n          <ion-row>\n            <ion-col>\n              <label class=\"aciertos\">Aciertos</label>\n              <br>\n              <ion-badge class=\"aciertos-background\" item-end>{{aciertos}}</ion-badge>                      \n            </ion-col>\n            <ion-col>\n                <label class=\"fallos\">Fallos</label>\n                <br>\n                <ion-badge class=\"fallos-background\" item-end>{{fallos}}</ion-badge>              \n            </ion-col>\n            <ion-col>\n              <label class=\"blancos\">Blancos</label>\n              <br>\n              <ion-badge class=\"blancos-background\" item-end>{{blancos}}</ion-badge>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <ion-card *ngIf=\"tipoTest != 4\">\n          <ion-card-header color=\"primary\" class=\"ion-text-center\">          \n            <ion-card-title>\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n            </ion-card-title>\n            <ion-card-subtitle>        \n              Criterios de corrección\n            </ion-card-subtitle>\n          </ion-card-header>     \n          <ion-card-content class=\"ion-text-wrap\">\n            <br>\n            <h3>\n              El <b>valor del fallo es {{valorFallo}}</b> por cada pregunta fallada\n            </h3>\n          </ion-card-content> \n        </ion-card> \n        <ion-card *ngIf=\"tipoTest == 4 && idOposicion == 63\">\n          <ion-card-header color=\"primary\" class=\"ion-text-center\">          \n            <ion-card-title>\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n            </ion-card-title>\n            <ion-card-subtitle>        \n              Criterios de corrección\n            </ion-card-subtitle>\n          </ion-card-header>     \n          <ion-card-content class=\"ion-text-wrap\">\n            <br>\n            <h3>\n              El <b>valor del fallo es 0</b>, las preguntas falladas no restan.\n              <br>\n              <br>\n              Es necesario <b>tener bien un 70% del total</b> de preguntas.\n            </h3>\n          </ion-card-content> \n        </ion-card> \n        <ion-card *ngIf=\"tipoTest == 4 && idOposicion == 189\">\n          <ion-card-header color=\"primary\" class=\"ion-text-center\">          \n            <ion-card-title>\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n            </ion-card-title>\n            <ion-card-subtitle>        \n              Criterios de corrección\n            </ion-card-subtitle>\n          </ion-card-header>    \n          <ion-card-content class=\"ion-text-wrap\">\n            <br>\n            <h3>\n              El <b>valor del fallo es 0</b>, las preguntas falladas no restan.\n              <br>\n              <br>\n              Es necesario <b>tener bien un 85% del total</b> de preguntas.\n            </h3>\n          </ion-card-content>    \n        </ion-card> \n      </section>      \n      <section *ngIf=\"dudosas > 0\">\n        <ion-item></ion-item>\n        <br>\n        <ion-badge class=\"nota\" color=\"light\">\n          Nota con Riesgo\n        </ion-badge>\n        <h1 [ngClass]=\"notaRiesgo >= 5 ? 'aprobado' : 'suspenso'\" >{{notaRiesgo}}</h1>\n        <ion-badge [ngClass]=\"notaRiesgo >= 5 ? 'etiqueta-aprobado' : 'etiqueta-suspenso'\">\n          <ion-label *ngIf=\"notaRiesgo >= 5\">APROBADO</ion-label>\n          <ion-label *ngIf=\"notaRiesgo < 5\">SUSPENSO</ion-label>\n        </ion-badge>\n        <ion-grid>\n          <ion-row>\n            <ion-col>\n              <label class=\"dudosas\">Dudosas</label>\n              <br>\n              <ion-badge class=\"dudosas-background\" item-end>{{dudosas}}</ion-badge>                      \n            </ion-col>\n            <ion-col>\n                <label class=\"aciertos\">Aciertos</label>\n                <br>\n                <ion-badge class=\"aciertos-background\" item-end>{{aciertos}} + {{dudosasAcierto}}</ion-badge>              \n            </ion-col>\n            <ion-col>\n              <label class=\"fallos\">Fallos</label>\n              <br>\n              <ion-badge class=\"fallos-background\" item-end>{{fallos}} + {{dudosasFallo}}</ion-badge>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </section>\n      <ion-card *ngIf=\"dudosas > 0\">\n        <ion-card-header color=\"primary\" class=\"ion-text-center\">          \n          <ion-card-title>\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n          </ion-card-title>\n          <ion-card-subtitle>        \n            Nota con Riesgo\n          </ion-card-subtitle>\n        </ion-card-header>    \n        <ion-card-content class=\"ion-text-wrap\">\n          <br>\n          <h3>\n            La nota con riesgo sólo es un cálculo que te dará una visión estratégica para el día del examen. ¡A veces arriesgar merece la pena!\n            <br>\n            <br>\n            <b>IMPORTANTE: la nota que se tendrá en cuenta para el cálculo de tu media será la NOTA REAL</b>\n          </h3>\n        </ion-card-content>    \n      </ion-card> \n    </section>\n\n    <section *ngSwitchCase=\"'revision'\">\n\n      <!-- <swiper #swiper [config]=\"config\"\n      (slideChange)=\"swiperSlideChanged($event)\"> -->\n      <swiper #swiper [virtual]=\"true\">\n        <ng-template swiperSlide *ngFor=\"let preguntas of listaPreguntas; let i = index\">\n          <ion-card>\n            <ion-card-header class=\"ion-text-center\">   \n              <ion-button fill=\"clear\" (click)=\"prev()\" [ngClass]=\"listaPreguntas[i].IdPregunta == 1 ? 'hidden' : 'visible' \">\n                <ion-icon slot=\"icon-only\" name=\"caret-back\"></ion-icon>\n              </ion-button>\n              <ion-button fill=\"clear\" (click)=\"openMenu()\">\n                <ion-icon name=\"apps\"></ion-icon>\n              </ion-button>\n              <!-- <ion-button fill=\"clear\" (click)=\"verIndice($event)\">\n                <ion-icon name=\"apps\"></ion-icon>\n              </ion-button>   -->\n              <ion-button fill=\"clear\" (click)=\"next()\" [ngClass]=\"listaPreguntas[i].IdPregunta == numeroPreguntas ? 'hidden' : 'visible' \">\n                <ion-icon slot=\"icon-only\" name=\"caret-forward\"></ion-icon>                    \n              </ion-button>\n              <ion-card-title color=\"primary\">\n                  <!-- Pregunta {{listaPreguntas[i].IdPregunta}} / {{numeroPreguntas}} -->\n                  {{i + 1}} / {{numeroPreguntas}}\n              </ion-card-title>\n            </ion-card-header>\n  \n            <ion-card-content class=\"ion-text-wrap\">\n              <h2><b>{{listaPreguntas[i].Texto}}</b></h2>\n          </ion-card-content>\n  \n          <ion-card *ngFor=\"let respuesta of listaPreguntas[i].Respuestas; let j = index\">\n            <ion-card-content class=\"ion-text-wrap\" [ngClass]=\"listaPreguntas[i].Respuestas[j].RespuestaCorrecta == 1 ? 'ion-card-content-correct' : listaPreguntas[i].Respuestas[j].Seleccionada == 1 ? 'ion-card-content-ko' : 'ion-card-content'\">\n              <ion-card-subtitle class=\"ion-text-left\">\n                <ion-checkbox *ngIf=\"listaPreguntas[i].Respuestas[j].RespuestaCorrecta == 1 && listaPreguntas[i].Respuestas[j].Seleccionada == 1\" color=\"success\" disabled=\"true\" [checked]=\"listaPreguntas[i].Respuestas[j].Seleccionada == 1 ? true : false\"></ion-checkbox>\n                <ion-checkbox *ngIf=\"listaPreguntas[i].Respuestas[j].RespuestaCorrecta == 0 && listaPreguntas[i].Respuestas[j].Seleccionada == 1\" color=\"danger\" disabled=\"true\" [checked]=\"listaPreguntas[i].Respuestas[j].Seleccionada == 1 ? true : false\"></ion-checkbox>\n                <ion-label [ngClass]=\"listaPreguntas[i].Respuestas[j].RespuestaCorrecta == 1 ? 'ion-card-content-ok' : listaPreguntas[i].Respuestas[j].Seleccionada == 1 ? 'ion-card-content-ko' : 'ion-card-content'\">{{listaPreguntas[i].Respuestas[j].Texto}}</ion-label>                                  \n              </ion-card-subtitle>\n            </ion-card-content>\n          </ion-card>\n          <ion-card [ngClass]=\"(listaPreguntas[i].Explicacion == '' || listaPreguntas[i].Explicacion == ' ') ? 'explicacion-hide' : 'explicacion' \">\n            <ion-card-content class=\"ion-text-wrap ion-card-content-explicacion\">\n              <h3 class=\"explicacion-title\">EXPLICACIÓN:</h3>\n              <div class=\"explicacion\" [innerHTML]=\"listaPreguntas[i].Explicacion | safeHtml\"></div>\n            </ion-card-content> \n            <!-- <ion-card-header color=\"warning\" class=\"ion-text-center\">          \n              <ion-card-title>\n                <ion-icon name=\"information-circle-outline\"></ion-icon>\n              </ion-card-title>\n              <ion-card-subtitle>        \n                Explicación\n              </ion-card-subtitle>\n            </ion-card-header>    \n            <ion-card-content class=\"ion-text-wrap\">\n              <div class=\"explicacion\" [innerHTML]=\"listaPreguntas[i].Explicacion | safeHtml\"></div>\n            </ion-card-content>     -->\n          </ion-card>\n          <br>\n          <br>\n          <br>\n          <ion-fab vertical=\"top\" horizontal=\"start\" *ngIf=\"listaPreguntas[i].Dudosa > 0\" >\n            <ion-fab-button size=\"small\" color=\"warning\" (click)=\"infoDudosa()\" title=\"Dudosa\"><ion-icon name=\"help-circle-outline\"></ion-icon></ion-fab-button>\n          </ion-fab>\n          <ion-fab vertical=\"top\" horizontal=\"end\" *ngIf=\"listaPreguntas[i].Contestada == 0\">\n            <ion-fab-button size=\"small\" color=\"white\" title=\"Comunicar\"><ion-icon name=\"hand-right-outline\" color=\"black\"></ion-icon></ion-fab-button>\n            <ion-fab-list>\n              <ion-fab-button size=\"small\" (click)=\"nuevoComentario(i, listaPreguntas[i].IdPregunta)\" title=\"Comentario\"><ion-icon name=\"chatbubbles-outline\" ></ion-icon></ion-fab-button>\n              <ion-fab-button size=\"small\" (click)=\"impugnarPregunta(i, listaPreguntas[i].IdPregunta)\" title=\"Impugnar\"><ion-icon name=\"alert-circle-outline\" color=\"danger\"></ion-icon></ion-fab-button>\n            </ion-fab-list>\n          </ion-fab>\n          <ion-fab vertical=\"top\" horizontal=\"end\" *ngIf=\"listaPreguntas[i].Contestada == 1 && listaPreguntas[i].Acertada == 1\">\n            <ion-fab-button size=\"small\" color=\"white\" title=\"Comunicar\"><ion-icon name=\"happy-outline\" color=\"success\"></ion-icon></ion-fab-button>\n            <ion-fab-list>\n              <ion-fab-button size=\"small\" (click)=\"nuevoComentario(i, listaPreguntas[i].IdPregunta)\" title=\"Comentario\"><ion-icon name=\"chatbubbles-outline\" ></ion-icon></ion-fab-button>\n              <ion-fab-button size=\"small\" (click)=\"impugnarPregunta(i, listaPreguntas[i].IdPregunta)\" title=\"Impugnar\"><ion-icon name=\"alert-circle-outline\" color=\"danger\"></ion-icon></ion-fab-button>\n            </ion-fab-list>\n          </ion-fab>\n          <ion-fab vertical=\"top\" horizontal=\"end\" *ngIf=\"listaPreguntas[i].Contestada == 1 && listaPreguntas[i].Fallada == 1\">\n            <ion-fab-button size=\"small\" color=\"white\" title=\"Comunicar\"><ion-icon name=\"sad-outline\" color=\"danger\"></ion-icon></ion-fab-button>\n            <ion-fab-list>\n              <ion-fab-button size=\"small\" (click)=\"nuevoComentario(i, listaPreguntas[i].IdPregunta)\" title=\"Comentario\"><ion-icon name=\"chatbubbles-outline\" ></ion-icon></ion-fab-button>\n              <ion-fab-button size=\"small\" (click)=\"impugnarPregunta(i, listaPreguntas[i].IdPregunta)\" title=\"Impugnar\"><ion-icon name=\"alert-circle-outline\" color=\"danger\"></ion-icon></ion-fab-button>\n            </ion-fab-list>\n          </ion-fab>\n          </ion-card>\n        </ng-template>\n      </swiper>\n    </section>\n\n    <section *ngSwitchCase=\"'comparativa'\" class=\"ion-text-center\">\n      <!-- <p>Tu nota comparada con la nota media del resto de alumnos en este test</p> -->  \n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <div class=\"ion-text-center\">\n            <ion-icon name=\"person\" class=\"icon-person\" color=\"primary\" ></ion-icon>\n            </div>\n            <ion-badge class=\"nota\" color=\"light\">\n              Tu Nota\n            </ion-badge>\n            <h1 [ngClass]=\"nota >= 5 ? 'aprobado' : 'suspenso'\" >{{nota}}</h1>                \n          </ion-col>\n          <ion-col>\n            <div class=\"ion-text-center\">\n            <ion-icon name=\"people\" class=\"icon-people\"></ion-icon>\n            </div>\n            <ion-badge class=\"nota\" color=\"light\">\n              Nota Media\n            </ion-badge>\n            <h1 [ngClass]=\"mediaAlumnos >= 5 ? 'aprobado' : 'suspenso'\" >{{mediaAlumnos}}</h1>            \n          </ion-col>          \n        </ion-row>\n      </ion-grid>  \n      <ion-card>\n        <ion-card-header color=\"primary\" class=\"ion-text-center\">          \n          <ion-card-title>\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n          </ion-card-title>\n          <ion-card-subtitle>        \n            Comparativa\n          </ion-card-subtitle>\n        </ion-card-header>    \n        <ion-card-content class=\"ion-text-wrap\">\n          <br>\n          <h3>Estas viendo una <b>comparativa</b> entre tu nota y la nota media del resto de alumnos en este test</h3>\n        </ion-card-content>    \n      </ion-card>                \n    </section>\n\n    <section *ngSwitchCase=\"'ranking'\" class=\"ion-text-center\">      \n      <img src=\"../assets/imgs/ranking.png\" width=\"50%\">\n      <h1>RANKING</h1>\n      <h3>PRÓXIMAMENTE</h3>   \n      <ion-card>\n        <ion-card-header color=\"primary\" class=\"ion-text-center\">          \n          <ion-card-title>\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n          </ion-card-title>\n          <ion-card-subtitle>        \n            Criterios del ranking\n          </ion-card-subtitle>\n        </ion-card-header>    \n        <ion-card-content class=\"ion-text-wrap\">\n          <br>\n          <h3>La clasificación del ranking se calcula en función de los resultados teniendo en cuenta la <b>nota, el tiempo y el número de veces realizado</b></h3>\n        </ion-card-content>    \n      </ion-card>      \n      <!-- <ion-card>\n        <ion-card-header color=\"primary\" class=\"ion-text-center\">          \n          <ion-card-title>\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n          </ion-card-title>\n          <ion-card-subtitle>        \n            Ley de protección de datos\n          </ion-card-subtitle>\n        </ion-card-header>    \n        <ion-card-content class=\"ion-text-wrap\">\n          <br>\n          <h3>En cumplimiento de lo establecido en la <b>LOPDGDD</b> (Ley orgánica de protección de datos y garantía de derechos digitales), los datos son almacenados bajo la confidencialidad y las medidas de seguridad legalmente establecidas. Por este motivo <b>el resto de alumnos no podrá ver tu nombre completo</b> al igual que tú tampoco puedes ver el nombre completo del resto de alumnos, sólo su nombre y las iniciales de sus apellidos.</h3>\n        </ion-card-content>    \n      </ion-card>   -->\n    </section>\n\n  </div>\n\n</ion-content>\n"],"names":["TestIndexReviewPage","SwiperCore","Virtual","i0","use","TestReviewPage","constructor","router","navParamService","proveedor","alertCtrl","loadingCtrl","storage","popoverCtrl","menu","navParams","JSON","parse","getNavData","idOposicion","test","tipoTest","listaPreguntas","listaRespuestas","numeroPreguntas","length","aciertos","fallos","blancos","dudosas","dudosasAcierto","dudosasFallo","nota","notaRiesgo","valorFallo","mediaAlumnos","origen","etiqueta","revisar","ngAfterContentChecked","swiperSlideChanged","e","terminar","confirm","create","header","message","buttons","text","handler","setNavData","navigate","present","explicacion","alert","prev","swiper","swiperRef","slidePrev","next","slideNext","goTo","position","slideTo","infoDudosa","nuevoComentario","posicion","idPregunta","prompt","inputs","name","placeholder","max","data","comentario","mensaje","insertarComentarioPregunta","loading","duration","get","then","val","undefined","usuario","comentarPregunta","Mensaje","AuthorizationToken","IdTest","subscribe","comentarioEnviado","error","console","log","dismiss","impugnarPregunta","motivo","insertarImpugnacionPregunta","preguntaImpugnada","verIndice","ev","popover","component","componentProps","preguntas","event","translucent","openMenu","enable","open","closeMenu","close","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}